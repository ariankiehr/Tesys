<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:application xmlns:ns2="http://research.sun.com/wadl/2006/10">
    <ns2:doc xmlns:jersey="http://jersey.java.net/" jersey:generatedBy="Jersey: 1.8-atlassian-11 03/22/2013 05:02 PM"/>
    <ns2:doc title="JIRA 6.0 REST API documentation" xml:lang="en">
        This documents the current REST API provided by JIRA.
    </ns2:doc>
    <ns2:grammars/>
    <ns2:resources base="http://ing.exa.unicen.edu.ar:8086/atlassian-jira-6.0/rest/api/2/">
        <ns2:resource path="application-properties">
            <ns2:method id="getProperty" name="GET">
                <ns2:doc>Returns an application property.</ns2:doc>
                <ns2:request>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="key" style="query" type="xs:string">
                        <ns2:doc>a String containing the property key</ns2:doc>
                    </ns2:param>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="permissionLevel" style="query" type="xs:string">
                        <ns2:doc>when fetching a list specifies the permission level of all items in the list
      see {@link com.atlassian.jira.bc.admin.ApplicationPropertiesService.EditPermissionLevel}</ns2:doc>
                    </ns2:param>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="keyFilter" style="query" type="xs:string">
                        <ns2:doc>when fetching a list allows the list to be filtered by the property's start of key
      e.g. &quot;jira.lf.*&quot; whould fetch only those permissions that are editable and whose keys start with
      &quot;jira.lf.&quot;. This is a regex.</ns2:doc>
                    </ns2:param>
                </ns2:request>
                <ns2:response>
                    <ns2:representation status="404">
                        <ns2:doc>Returned if the property does not exist or the currently authenticated user does not have permission to
      view it.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation element="property" status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;id&quot; : &quot;jira.home&quot;,
  &quot;key&quot; : &quot;jira.home&quot;,
  &quot;value&quot; : &quot;/var/jira/jira-home&quot;,
  &quot;name&quot; : &quot;jira.home&quot;,
  &quot;desc&quot; : &quot;JIRA home directory&quot;,
  &quot;type&quot; : &quot;string&quot;,
  &quot;defaultValue&quot; : &quot;&quot;
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returned if the property exists and the currently authenticated user has permission to view it. Contains a
      full representation of the property.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:resource path="/{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string"/>
                <ns2:method id="setPropertyViaRestfulTable" name="PUT">
                    <ns2:doc>Modify an application property via PUT. The &quot;value&quot; field present in the PUT will override thee existing value.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="*/*">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : &quot;jira.home&quot;,
  &quot;value&quot; : &quot;/var/jira/jira-home&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the version does not exist or the currently authenticated user does not have permission to
      view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>Returned if the version exists and the currently authenticated user has permission to edit it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the currently authenticated user does not have permission to edit the version.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="issue/{issueIdOrKey}/attachments">
            <ns2:doc>Issue attachments</ns2:doc>
            <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueIdOrKey" style="template" type="xs:string">
                <ns2:doc>the issue that you want to add the attachments to</ns2:doc>
            </ns2:param>
            <ns2:method id="addAttachment" name="POST">
                <ns2:doc>Add one or more attachments to an issue.
 &lt;p&gt;
 This resource expects a multipart post. The media-type multipart/form-data is defined in RFC 1867. Most client
 libraries have classes that make dealing with multipart posts simple. For instance, in Java the Apache HTTP Components
 library provides a
 &lt;a href=&quot;http://hc.apache.org/httpcomponents-client-ga/httpmime/apidocs/org/apache/http/entity/mime/MultipartEntity.html&quot;&gt;MultiPartEntity&lt;/a&gt;
 that makes it simple to submit a multipart POST.
 &lt;p&gt;
 In order to protect against XSRF attacks, because this method accepts multipart/form-data, it has XSRF protection
 on it.  This means you must submit a header of X-Atlassian-Token: nocheck with the request, otherwise it will be
 blocked.
 &lt;p&gt;
     The name of the multipart/form-data parameter that contains attachments must be &quot;file&quot;
 &lt;p&gt;
     A simple example to upload a file called &quot;myfile.txt&quot; to issue REST-123:
     &lt;pre&gt;curl -D- -u admin:admin -X POST -H &quot;X-Atlassian-Token: nocheck&quot; -F &quot;file=@myfile.txt&quot; http://myhost/rest/api/2/issue/TEST-123/attachments&lt;/pre&gt;</ns2:doc>
                <ns2:response>
                    <ns2:representation status="404">
                        <ns2:doc>Returned if the requested issue is not found, the user does not have permission to view it, or if the
      attachments exceeds the maximum configured attachment size.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>[ {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2.0/attachments/10000&quot;,
  &quot;filename&quot; : &quot;picture.jpg&quot;,
  &quot;author&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;created&quot; : &quot;2013-05-19T06:30:50.701-0500&quot;,
  &quot;size&quot; : 23123,
  &quot;mimeType&quot; : &quot;image/jpeg&quot;,
  &quot;content&quot; : &quot;http://www.example.com/jira/attachments/10000&quot;,
  &quot;thumbnail&quot; : &quot;http://www.example.com/jira/secure/thumbnail/10000&quot;
}, {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2.0/attachments/10001&quot;,
  &quot;filename&quot; : &quot;dbeuglog.txt&quot;,
  &quot;author&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;created&quot; : &quot;2013-05-19T06:30:50.701-0500&quot;,
  &quot;size&quot; : 2460,
  &quot;mimeType&quot; : &quot;text/plain&quot;,
  &quot;content&quot; : &quot;http://www.example.com/jira/attachments/10001&quot;,
  &quot;thumbnail&quot; : &quot;http://www.example.com/jira/secure/thumbnail/10002&quot;
} ]</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="403">
                        <ns2:doc>Returned if attachments is disabled or if you don't have permission to add attachments to this issue.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
        </ns2:resource>
        <ns2:resource path="groups">
            <ns2:doc>REST endpoint for searching groups in a group picker</ns2:doc>
            <ns2:resource path="/picker">
                <ns2:method id="findGroups" name="GET">
                    <ns2:doc>Returns groups with substrings matching a given query. This is mainly for use with
 the group picker, so the returned groups contain html to be used as picker suggestions.
 The groups are also wrapped in a single response object that also contains a header for
 use in the picker, specifically &lt;i&gt;Showing X of Y matching groups&lt;/i&gt;.

 The number of groups returned is limited by the system property &quot;jira.ajax.autocomplete.limit&quot;

 The groups will be unique and sorted.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="query" style="query" type="xs:string">
                            <ns2:doc>a String to match groups agains</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="exclude" style="query" type="xs:string"/>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="maxResults" style="query" type="xs:int"/>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation element="groupsuggestions" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;header&quot; : &quot;Showing 20 of 25 matching groups&quot;,
  &quot;total&quot; : 25,
  &quot;groups&quot; : [ {
    &quot;name&quot; : &quot;jdog-developers&quot;,
    &quot;html&quot; : &quot;&lt;b&gt;j&lt;/b&gt;dog-developers&quot;
  }, {
    &quot;name&quot; : &quot;juvenal-bot&quot;,
    &quot;html&quot; : &quot;&lt;b&gt;j&lt;/b&gt;uvenal-bot&quot;
  } ]
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned even if no groups match the given substring</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="mypermissions">
            <ns2:doc>Provide permission information for the current user.</ns2:doc>
            <ns2:method id="getPermissions" name="GET">
                <ns2:doc>Returns all permissions in the system and whether the currently logged in user has them. You can optionally provide a specific context to get permissions for
 (projectKey OR projectId OR issueKey OR issueId)
 &lt;ul&gt;
    &lt;li&gt; When no context supplied the project related permissions will return true if the user has that permission in ANY project &lt;/li&gt;
    &lt;li&gt; If a project context is provided, project related permissions will return true if the user has the permissions in the specified project.
        For permissions that are determined using issue data (e.g Current Assignee), true will be returned if the user meets the permission criteria in ANY issue in that project &lt;/li&gt;
    &lt;li&gt; If an issue context is provided, it will return whether or not the user has each permission in that specific issue&lt;/li&gt;
 &lt;/ul&gt;
 &lt;p&gt;
    NB: The above means that for issue-level permissions (EDIT_ISSUE for example), hasPermission may be true when no context is provided, or when a project context is provided,
    &lt;b&gt;but&lt;/b&gt; may be false for any given (or all) issues. This would occur (for example) if Reporters were given the EDIT_ISSUE permission. This is because
    any user could be a reporter, except in the context of a concrete issue, where the reporter is known.
 &lt;/p&gt;
 &lt;p&gt;
    Global permissions will still be returned for all scopes.
 &lt;/p&gt;</ns2:doc>
                <ns2:request>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="projectKey" style="query" type="xs:string">
                        <ns2:doc>- key of project to scope returned permissions for.</ns2:doc>
                    </ns2:param>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="projectId" style="query" type="xs:string">
                        <ns2:doc>- id of project to scope returned permissions for.</ns2:doc>
                    </ns2:param>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueKey" style="query" type="xs:string">
                        <ns2:doc>- key of the issue to scope returned permissions for.</ns2:doc>
                    </ns2:param>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueId" style="query" type="xs:string">
                        <ns2:doc>- id of the issue to scope returned permissions for.</ns2:doc>
                    </ns2:param>
                </ns2:request>
                <ns2:response>
                    <ns2:representation status="404">
                        <ns2:doc>Returned if the project or issue id or key is not found.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation element="permission" status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;permissions&quot; : {
    &quot;EDIT_ISSUE&quot; : {
      &quot;id&quot; : &quot;12&quot;,
      &quot;key&quot; : &quot;EDIT_ISSUE&quot;,
      &quot;name&quot; : &quot;Edit Issues&quot;,
      &quot;description&quot; : &quot;Ability to edit issues.&quot;,
      &quot;havePermission&quot; : true
    }
  }
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returns a list of all permissions in JIRA and whether the user has them.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="400">
                        <ns2:doc>Returned if the project or issue id is invalid.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
        </ns2:resource>
        <ns2:resource path="avatar">
            <ns2:resource path="{type}/temporary">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="type" style="template" type="xs:string">
                    <ns2:doc>the avatar type</ns2:doc>
                </ns2:param>
                <ns2:method id="storeTemporaryAvatar" name="POST">
                    <ns2:doc>Creates temporary avatar</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="filename" style="query" type="xs:string">
                            <ns2:doc>name of file being uploaded</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="size" style="query" type="xs:long">
                            <ns2:doc>size of file</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation element="avatar" status="201" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;cropperWidth&quot; : 120,
  &quot;cropperOffsetX&quot; : 50,
  &quot;cropperOffsetY&quot; : 50,
  &quot;url&quot; : &quot;http://example.com/jira/secure/temporaryavatar?cropped=true&quot;,
  &quot;needsCropping&quot; : true
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>temporary avatar cropping instructions</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Valiation failed. For example filesize is beyond max attachment size.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the request does not conain a valid XSRF token</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="500">
                            <ns2:doc>Returned if an error occurs while converting temporary avatar to real avatar</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{type}/temporaryCrop">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="type" style="template" type="xs:string">
                    <ns2:doc>the avatar type</ns2:doc>
                </ns2:param>
                <ns2:method id="createAvatarFromTemporary" name="POST">
                    <ns2:doc>Updates the cropping instructions of the temporary avatar.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;cropperWidth&quot; : 120,
  &quot;cropperOffsetX&quot; : 50,
  &quot;cropperOffsetY&quot; : 50,
  &quot;needsCropping&quot; : false
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation element="avatar" status="201" mediaType="application/json"/>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if the cropping coordinates are invalid</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="500">
                            <ns2:doc>Returned if an error occurs while cropping the temporary avatar</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{type}/system">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="type" style="template" type="xs:string">
                    <ns2:doc>the avatar type</ns2:doc>
                </ns2:param>
                <ns2:method id="getAllSystemAvatars" name="GET">
                    <ns2:doc>Returns all system avatars of the given type.</ns2:doc>
                    <ns2:response>
                        <ns2:representation element="avatars" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;system&quot; : [ {
    &quot;id&quot; : &quot;1000&quot;,
    &quot;owner&quot; : &quot;fred&quot;,
    &quot;isSystemAvatar&quot; : true,
    &quot;isSelected&quot; : true,
    &quot;selected&quot; : true
  } ]
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a map containing a list of system avatars. A map is returned to be consistent with the shape of the
      project/KEY/avatars REST end point.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="500">
                            <ns2:doc>Returned if an error occurs while retrieving the list of avatars.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="projectvalidate">
            <ns2:resource path="key">
                <ns2:method id="getProject" name="GET">
                    <ns2:doc>Validates a project key.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="key" style="query" type="xs:string">
                            <ns2:doc>the project key</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation element="errorCollection" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;errorMessages&quot; : [ ],
  &quot;errors&quot; : {
    &quot;projectKey&quot; : &quot;A project with that project key already exists.&quot;
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns an ErrorCollection containing any validation errors for the project key.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="resolution">
            <ns2:method id="getResolutions" name="GET">
                <ns2:doc>Returns a list of all resolutions.</ns2:doc>
                <ns2:response>
                    <ns2:representation element="list of resolutions" status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>[ {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/resolution/1&quot;,
  &quot;description&quot; : &quot;A fix for this issue is checked into the tree and tested.&quot;,
  &quot;iconUrl&quot; : &quot;http://www.example.com/jira/images/icons/statuses/resolved.png&quot;,
  &quot;name&quot; : &quot;Fixed&quot;
}, {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/resolution/3&quot;,
  &quot;description&quot; : &quot;This is what it is supposed to do.&quot;,
  &quot;name&quot; : &quot;Works as designed&quot;
} ]</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returned if the resolutions exists and the user has permission to view them. Contains a full representation of
      the resolution in JSON format.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:resource path="{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string">
                    <ns2:doc>a String containing the resolution id</ns2:doc>
                </ns2:param>
                <ns2:method id="getResolution" name="GET">
                    <ns2:doc>Returns a resolution.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the resolution does not exist or the user does not have permission to view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="resolution" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/resolution/1&quot;,
  &quot;description&quot; : &quot;A fix for this issue is checked into the tree and tested.&quot;,
  &quot;iconUrl&quot; : &quot;http://www.example.com/jira/images/icons/statuses/resolved.png&quot;,
  &quot;name&quot; : &quot;Fixed&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the resolution exists and the user has permission to view it. Contains a full representation of
      the resolution in JSON format.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="issue">
            <ns2:method id="createIssue" name="POST">
                <ns2:doc>Creates an issue or a sub-task from a JSON representation.
 &lt;p&gt;
 The fields that can be set on create, in either the fields parameter or the update parameter can be determined
 using the &lt;b&gt;/rest/api/2/issue/createmeta&lt;/b&gt; resource.
 If a field is not configured to appear on the create screen, then it will not be in the createmeta, and a field
 validation error will occur if it is submitted.
 &lt;p/&gt;
 Creating a sub-task is similar to creating a regular issue, with two important differences:
 &lt;ul&gt;
     &lt;li&gt;the &lt;code&gt;issueType&lt;/code&gt; field must correspond to a sub-task issue type (you can use
     &lt;code&gt;/issue/createmeta&lt;/code&gt; to discover sub-task issue types), and&lt;/li&gt;
     &lt;li&gt;you must provide a &lt;code&gt;parent&lt;/code&gt; field in the issue create request containing the id or key of the
     parent issue.&lt;/li&gt;
 &lt;/ul&gt;</ns2:doc>
                <ns2:request>
                    <ns2:representation mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;update&quot; : {
    &quot;worklog&quot; : [ {
      &quot;add&quot; : {
        &quot;started&quot; : &quot;2011-07-05T11:05:00.000+0000&quot;,
        &quot;timeSpent&quot; : &quot;60m&quot;
      }
    } ]
  },
  &quot;fields&quot; : {
    &quot;project&quot; : {
      &quot;id&quot; : &quot;10000&quot;
    },
    &quot;summary&quot; : &quot;something's wrong&quot;,
    &quot;issuetype&quot; : {
      &quot;id&quot; : &quot;10000&quot;
    },
    &quot;assignee&quot; : {
      &quot;name&quot; : &quot;homer&quot;
    },
    &quot;reporter&quot; : {
      &quot;name&quot; : &quot;smithers&quot;
    },
    &quot;priority&quot; : {
      &quot;id&quot; : &quot;20000&quot;
    },
    &quot;labels&quot; : [ &quot;bugfix&quot;, &quot;blitz_test&quot; ],
    &quot;timetracking&quot; : {
      &quot;originalEstimate&quot; : &quot;10&quot;,
      &quot;remainingEstimate&quot; : &quot;5&quot;
    },
    &quot;security&quot; : {
      &quot;id&quot; : &quot;10000&quot;
    },
    &quot;versions&quot; : [ {
      &quot;id&quot; : &quot;10000&quot;
    } ],
    &quot;environment&quot; : &quot;environment&quot;,
    &quot;description&quot; : &quot;description&quot;,
    &quot;duedate&quot; : &quot;2011-03-11&quot;,
    &quot;fixVersions&quot; : [ {
      &quot;id&quot; : &quot;10001&quot;
    } ],
    &quot;components&quot; : [ {
      &quot;id&quot; : &quot;10000&quot;
    } ],
    &quot;customfield_60000&quot; : &quot;jira-developers&quot;,
    &quot;customfield_20000&quot; : &quot;06/Jul/11 3:25 PM&quot;,
    &quot;customfield_80000&quot; : {
      &quot;value&quot; : &quot;red&quot;
    },
    &quot;customfield_40000&quot; : &quot;this is a text field&quot;,
    &quot;customfield_30000&quot; : [ &quot;10000&quot;, &quot;10002&quot; ],
    &quot;customfield_70000&quot; : [ &quot;jira-administrators&quot;, &quot;jira-users&quot; ],
    &quot;customfield_50000&quot; : &quot;this is a text area. big text.&quot;,
    &quot;customfield_10000&quot; : &quot;09/Jun/81&quot;
  }
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                    </ns2:representation>
                </ns2:request>
                <ns2:response>
                    <ns2:representation element="issue" status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;id&quot; : &quot;10000&quot;,
  &quot;key&quot; : &quot;TST-24&quot;,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/10000&quot;
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returns a link to the created issue.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="400">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;errorMessages&quot; : [ &quot;Field 'priority' is required&quot; ],
  &quot;errors&quot; : {
  }
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returned if the input is invalid (e.g. missing required fields, invalid field values, and so forth).</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:resource path="{issueIdOrKey}/notify">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueIdOrKey" style="template" type="xs:string">
                    <ns2:doc>a string containing the issue id or key the comment will be added to</ns2:doc>
                </ns2:param>
                <ns2:method id="notify" name="POST">
                    <ns2:doc>Sends a notification (email) to the list or recipients defined in the request.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;subject&quot; : &quot;Duis eu justo eget augue iaculis fermentum.&quot;,
  &quot;textBody&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.&quot;,
  &quot;htmlBody&quot; : &quot;Lorem ipsum &lt;strong&gt;dolor&lt;/strong&gt; sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.&quot;,
  &quot;to&quot; : {
    &quot;reporter&quot; : false,
    &quot;assignee&quot; : false,
    &quot;watchers&quot; : true,
    &quot;voters&quot; : true,
    &quot;users&quot; : [ {
      &quot;name&quot; : &quot;fred&quot;,
      &quot;active&quot; : false
    } ],
    &quot;groups&quot; : [ {
      &quot;name&quot; : &quot;notification-group&quot;,
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/group?groupname=notification-group&quot;
    } ]
  },
  &quot;restrict&quot; : {
    &quot;groups&quot; : [ {
      &quot;name&quot; : &quot;notification-group&quot;,
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/group?groupname=notification-group&quot;
    } ],
    &quot;permissions&quot; : [ {
      &quot;id&quot; : &quot;10&quot;,
      &quot;key&quot; : &quot;BROWSE&quot;
    } ]
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Returned if adding to the mail queue was successful</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if the input is invalid (e.g. missing required fields, invalid values, and so forth).</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned is outgoing emails are disabled OR no SMTP server is defined.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{issueIdOrKey}/watchers">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueIdOrKey" style="template" type="xs:string">
                    <ns2:doc>a String containing an issue key.</ns2:doc>
                </ns2:param>
                <ns2:method id="getIssueWatchers" name="GET">
                    <ns2:doc>Returns the list of watchers for the issue with the given key.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested issue is not found, or the user does not have permission to view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="watchers" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/EX-1/watchers&quot;,
  &quot;isWatching&quot; : false,
  &quot;watchCount&quot; : 1,
  &quot;watchers&quot; : [ {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  } ]
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns the list of watchers for an issue.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="addWatcher" name="POST">
                    <ns2:doc>Adds a user to an issue's watcher list.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>&quot;fred&quot;</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Returned if the watcher was added successfully.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if either the issue or the user does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if the calling user does not have permission to add the watcher to the issue's list of watchers.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if there is a problem with the received user representation.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="removeWatcher" name="DELETE">
                    <ns2:doc>Removes a user from an issue's watcher list.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="username" style="query" type="xs:string">
                            <ns2:doc>a String containing the name of the user to remove from the watcher list. Must not be null.</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Returned if the watcher was removed successfully.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if either the issue does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if the calling user does not have permission to remove the watcher from the issue's list of
      watchers.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if a user name query parameter is not supplied.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="createmeta">
                <ns2:method id="getCreateIssueMeta" name="GET">
                    <ns2:doc>Returns the meta data for creating issues. This includes the available projects, issue types and fields,
 including field types and whether or not those fields are required.
 Projects will not be returned if the user does not have permission to create issues in that project.

 &lt;p&gt;
 The fields in the createmeta correspond to the fields in the create screen for the project/issuetype.
 Fields not in the screen will not be in the createmeta.

 &lt;p&gt;
 Fields will only be returned if &lt;code&gt;expand=projects.issuetypes.fields&lt;/code&gt;.
 &lt;p&gt;
 The results can be filtered by project and/or issue type, given by the query params.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="projectIds" style="query" type="xs:string">
                            <ns2:doc>combined with the projectKeys param, lists the projects with which to filter the results. If absent, all projects are returned.
  This parameter can be specified multiple times, and/or be a comma-separated list.
  Specifiying a project that does not exist (or that you cannot create issues in) is not an error, but it will not be in the results.</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="projectKeys" style="query" type="xs:string">
                            <ns2:doc>combined with the projectIds param, lists the projects with which to filter the results. If null, all projects are returned.
  This parameter can be specified multiple times, and/or be a comma-separated list.
  Specifiying a project that does not exist (or that you cannot create issues in) is not an error, but it will not be in the results.</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issuetypeIds" style="query" type="xs:string">
                            <ns2:doc>combinded with issuetypeNames, lists the issue types with which to filter the results. If null, all issue types are returned.
  This parameter can be specified multiple times, and/or be a comma-separated list.
  Specifiying an issue type that does not exist is not an error.</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issuetypeNames" style="query" type="xs:string">
                            <ns2:doc>combinded with issuetypeIds, lists the issue types with which to filter the results. If null, all issue types are returned.
  This parameter can be specified multiple times, but is NOT interpreted as a comma-separated list.
  Specifiying an issue type that does not exist is not an error.</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;expand&quot; : &quot;projects&quot;,
  &quot;projects&quot; : [ {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/project/EX&quot;,
    &quot;id&quot; : &quot;10000&quot;,
    &quot;key&quot; : &quot;EX&quot;,
    &quot;name&quot; : &quot;Example Project&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=small&amp;pid=10000&amp;avatarId=10011&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=xsmall&amp;pid=10000&amp;avatarId=10011&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=medium&amp;pid=10000&amp;avatarId=10011&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/projectavatar?pid=10000&amp;avatarId=10011&quot;
    },
    &quot;issuetypes&quot; : [ {
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issueType/1&quot;,
      &quot;id&quot; : &quot;1&quot;,
      &quot;description&quot; : &quot;An error in the code&quot;,
      &quot;iconUrl&quot; : &quot;http://www.example.com/jira/images/icons/issuetypes/bug.png&quot;,
      &quot;name&quot; : &quot;Bug&quot;,
      &quot;subtask&quot; : false,
      &quot;fields&quot; : {
        &quot;issuetype&quot; : {
          &quot;required&quot; : true,
          &quot;name&quot; : &quot;Issue Type&quot;,
          &quot;operations&quot; : [ &quot;set&quot; ]
        }
      }
    } ]
  } ]
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns the meta data for creating issues.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the user does not have permission to view any of the requested projects.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{issueIdOrKey}/editmeta">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueIdOrKey" style="template" type="xs:string">
                    <ns2:doc>the issue whose edit meta data you want to view</ns2:doc>
                </ns2:param>
                <ns2:method id="getEditIssueMeta" name="GET">
                    <ns2:doc>Returns the meta data for editing an issue.
 &lt;p&gt;
 The fields in the editmeta correspond to the fields in the edit screen for the issue.
 Fields not in the screen will not be in the editemeta.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested issue is not found or the user does not have permission to view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;fields&quot; : {
    &quot;summary&quot; : {
      &quot;required&quot; : false,
      &quot;schema&quot; : {
        &quot;type&quot; : &quot;array&quot;,
        &quot;items&quot; : &quot;option&quot;,
        &quot;custom&quot; : &quot;com.atlassian.jira.plugin.system.customfieldtypes:multiselect&quot;,
        &quot;customId&quot; : 10001
      },
      &quot;name&quot; : &quot;My Multi Select&quot;,
      &quot;operations&quot; : [ &quot;set&quot;, &quot;add&quot; ],
      &quot;allowedValues&quot; : [ &quot;red&quot;, &quot;blue&quot; ]
    }
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a response containing a Map of FieldBeans for fields editable by the current user.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{issueIdOrKey}/worklog">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueIdOrKey" style="template" type="xs:string">
                    <ns2:doc>a string containing the issue id or key the worklog will be added to</ns2:doc>
                </ns2:param>
                <ns2:method id="getIssueWorklog" name="GET">
                    <ns2:doc>Returns all work logs for an issue.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the issue with the given id/key does not exist or if the currently authenticated user does not
      have permission to view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;startAt&quot; : 0,
  &quot;maxResults&quot; : 1,
  &quot;total&quot; : 1,
  &quot;worklogs&quot; : [ {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/10010/worklog/10000&quot;,
    &quot;author&quot; : {
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
      &quot;name&quot; : &quot;fred&quot;,
      &quot;displayName&quot; : &quot;Fred F. User&quot;,
      &quot;active&quot; : false
    },
    &quot;updateAuthor&quot; : {
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
      &quot;name&quot; : &quot;fred&quot;,
      &quot;displayName&quot; : &quot;Fred F. User&quot;,
      &quot;active&quot; : false
    },
    &quot;comment&quot; : &quot;I did some work here.&quot;,
    &quot;visibility&quot; : {
      &quot;type&quot; : &quot;group&quot;,
      &quot;value&quot; : &quot;jira-developers&quot;
    },
    &quot;started&quot; : &quot;2013-05-19T06:30:50.707-0500&quot;,
    &quot;timeSpent&quot; : &quot;3h 20m&quot;,
    &quot;timeSpentSeconds&quot; : 12000,
    &quot;id&quot; : &quot;100028&quot;
  } ]
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>returns a collection of worklogs associated with the issue, with count and pagination information.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="addWorklog" name="POST">
                    <ns2:doc>Adds a new worklog entry to an issue.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="adjustEstimate" style="query" type="xs:string">
                            <ns2:doc>(optional) allows you to provide specific instructions to update the remaining time estimate of the issue.  Valid values are
      &lt;ul&gt;
      &lt;li&gt;&quot;new&quot; - sets the estimate to a specific value&lt;/li&gt;
      &lt;li&gt;&quot;leave&quot;- leaves the estimate as is&lt;/li&gt;
      &lt;li&gt;&quot;manual&quot; - specify a specific amount to increase remaining estimate by&lt;/li&gt;
      &lt;li&gt;&quot;auto&quot;- Default option.  Will automatically adjust the value based on the new timeSpent specified on the worklog&lt;/li&gt; &lt;/ul&gt;</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="newEstimate" style="query" type="xs:string">
                            <ns2:doc>(required when &quot;new&quot; is selected for adjustEstimate) the new value for the remaining estimate field. e.g. &quot;2d&quot;</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="reduceBy" style="query" type="xs:string">
                            <ns2:doc>(required when &quot;manual&quot; is selected for adjustEstimate) the amount to reduce the remaining estimate by e.g. &quot;2d&quot;</ns2:doc>
                        </ns2:param>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/10010/worklog/10000&quot;,
  &quot;author&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;updateAuthor&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;comment&quot; : &quot;I did some work here.&quot;,
  &quot;visibility&quot; : {
    &quot;type&quot; : &quot;group&quot;,
    &quot;value&quot; : &quot;jira-developers&quot;
  },
  &quot;started&quot; : &quot;2013-05-19T06:30:50.707-0500&quot;,
  &quot;timeSpent&quot; : &quot;3h 20m&quot;,
  &quot;timeSpentSeconds&quot; : 12000,
  &quot;id&quot; : &quot;100028&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="201">
                            <ns2:doc>Returned if add was successful</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if the input is invalid (e.g. missing required fields, invalid values, and so forth).</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the calling user does not have permission to add the worklog</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{issueIdOrKey}/transitions">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueIdOrKey" style="template" type="xs:string">
                    <ns2:doc>the issue you want to transition</ns2:doc>
                </ns2:param>
                <ns2:method id="getTransitions" name="GET">
                    <ns2:doc>Get a list of the transitions possible for this issue by the current user, along with fields that are required and their types.

 &lt;p&gt;
 Fields will only be returned if &lt;code&gt;expand=transitions.fields&lt;/code&gt;.
 &lt;p&gt;
 The fields in the metadata correspond to the fields in the transition screen for that transition.
 Fields not in the screen will not be in the metadata.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="transitionId" style="query" type="xs:string"/>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested issue is not found or the user does not have permission to view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;expand&quot; : &quot;transitions&quot;,
  &quot;transitions&quot; : [ {
    &quot;id&quot; : &quot;2&quot;,
    &quot;name&quot; : &quot;Close Issue&quot;,
    &quot;to&quot; : {
      &quot;self&quot; : &quot;http://localhost:8090/jira/rest/api/2.0/status/10000&quot;,
      &quot;description&quot; : &quot;The issue is currently being worked on.&quot;,
      &quot;iconUrl&quot; : &quot;http://localhost:8090/jira/images/icons/progress.gif&quot;,
      &quot;name&quot; : &quot;In Progress&quot;,
      &quot;id&quot; : &quot;10000&quot;
    },
    &quot;fields&quot; : {
      &quot;summary&quot; : {
        &quot;required&quot; : false,
        &quot;schema&quot; : {
          &quot;type&quot; : &quot;array&quot;,
          &quot;items&quot; : &quot;option&quot;,
          &quot;custom&quot; : &quot;com.atlassian.jira.plugin.system.customfieldtypes:multiselect&quot;,
          &quot;customId&quot; : 10001
        },
        &quot;name&quot; : &quot;My Multi Select&quot;,
        &quot;operations&quot; : [ &quot;set&quot;, &quot;add&quot; ],
        &quot;allowedValues&quot; : [ &quot;red&quot;, &quot;blue&quot; ]
      }
    }
  }, {
    &quot;id&quot; : &quot;711&quot;,
    &quot;name&quot; : &quot;QA Review&quot;,
    &quot;to&quot; : {
      &quot;self&quot; : &quot;http://localhost:8090/jira/rest/api/2.0/status/5&quot;,
      &quot;description&quot; : &quot;The issue is closed.&quot;,
      &quot;iconUrl&quot; : &quot;http://localhost:8090/jira/images/icons/closed.gif&quot;,
      &quot;name&quot; : &quot;Closed&quot;,
      &quot;id&quot; : &quot;5&quot;
    },
    &quot;fields&quot; : {
      &quot;colour&quot; : {
        &quot;required&quot; : false,
        &quot;schema&quot; : {
          &quot;type&quot; : &quot;array&quot;,
          &quot;items&quot; : &quot;option&quot;,
          &quot;custom&quot; : &quot;com.atlassian.jira.plugin.system.customfieldtypes:multiselect&quot;,
          &quot;customId&quot; : 10001
        },
        &quot;name&quot; : &quot;My Multi Select&quot;,
        &quot;operations&quot; : [ &quot;set&quot;, &quot;add&quot; ],
        &quot;allowedValues&quot; : [ &quot;red&quot;, &quot;blue&quot; ]
      },
      &quot;summary&quot; : {
        &quot;required&quot; : false,
        &quot;schema&quot; : {
          &quot;type&quot; : &quot;array&quot;,
          &quot;items&quot; : &quot;option&quot;,
          &quot;custom&quot; : &quot;com.atlassian.jira.plugin.system.customfieldtypes:multiselect&quot;,
          &quot;customId&quot; : 10001
        },
        &quot;name&quot; : &quot;My Multi Select&quot;,
        &quot;operations&quot; : [ &quot;set&quot;, &quot;add&quot; ],
        &quot;allowedValues&quot; : [ &quot;red&quot;, &quot;blue&quot; ]
      }
    }
  } ]
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a full representation of the transitions possible for the specified issue and the fields required to perform the transition.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="doTransition" name="POST">
                    <ns2:doc>Perform a transition on an issue.
 When performing the transition you can udate or set other issue fields.
 &lt;p&gt;
 The fields that can be set on transtion, in either the fields parameter or the update parameter can be determined
 using the &lt;b&gt;/rest/api/2/issue/{issueIdOrKey}/transitions?expand=transitions.fields&lt;/b&gt; resource.
 If a field is not configured to appear on the transition screen, then it will not be in the transition metadata, and a field
 validation error will occur if it is submitted.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;update&quot; : {
    &quot;comment&quot; : [ {
      &quot;add&quot; : {
        &quot;body&quot; : &quot;Bug has been fixed.&quot;
      }
    } ]
  },
  &quot;fields&quot; : {
    &quot;assignee&quot; : {
      &quot;name&quot; : &quot;bob&quot;
    },
    &quot;resolution&quot; : {
      &quot;name&quot; : &quot;Fixed&quot;
    }
  },
  &quot;transition&quot; : {
    &quot;id&quot; : &quot;5&quot;
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Returned if the transition was successful.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>The issue does not exist or the user does not have permission to view it</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>If there is no transition specified.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{issueIdOrKey}/remotelink/{linkId}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueIdOrKey" style="template" type="xs:string">
                    <ns2:doc>the issue to update the remote issue link for</ns2:doc>
                </ns2:param>
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="linkId" style="template" type="xs:string"/>
                <ns2:method id="getRemoteIssueLinkById" name="GET">
                    <ns2:doc>Get the remote issue link with the given id on the issue.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the issue or remote issue link do not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 10000,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/issue/MKY-1/remotelink/10000&quot;,
  &quot;globalId&quot; : &quot;system=http://www.mycompany.com/support&amp;id=1&quot;,
  &quot;application&quot; : {
    &quot;type&quot; : &quot;com.acme.tracker&quot;,
    &quot;name&quot; : &quot;My Acme Tracker&quot;
  },
  &quot;relationship&quot; : &quot;causes&quot;,
  &quot;object&quot; : {
    &quot;url&quot; : &quot;http://www.mycompany.com/support?id=1&quot;,
    &quot;title&quot; : &quot;TSTSUP-111&quot;,
    &quot;summary&quot; : &quot;Crazy customer support issue&quot;,
    &quot;icon&quot; : {
      &quot;url16x16&quot; : &quot;http://www.mycompany.com/support/ticket.png&quot;,
      &quot;title&quot; : &quot;Support Ticket&quot;
    },
    &quot;status&quot; : {
      &quot;resolved&quot; : true,
      &quot;icon&quot; : {
        &quot;url16x16&quot; : &quot;http://www.mycompany.com/support/resolved.png&quot;,
        &quot;title&quot; : &quot;Case Closed&quot;,
        &quot;link&quot; : &quot;http://www.mycompany.com/support?id=1&amp;details=closed&quot;
      }
    }
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Information on the remote issue link with the given id.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if the calling user is not authenticated.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if the linkId is not a valid number, or if the remote issue link with the given id does not belong to
      the given issue.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the calling user does not have permission to view the remote issue link, or if issue linking is
      disabled.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="deleteRemoteIssueLinkById" name="DELETE">
                    <ns2:doc>Delete the remote issue link with the given id on the issue.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Returned if the remote issue link was removed successfully.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the issue or remote issue link do not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if the calling user is not authenticated.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the calling user does not have permission to delete the remote issue link, or if issue linking is
      disabled.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="updateRemoteIssueLink" name="PUT">
                    <ns2:doc>Updates a remote issue link from a JSON representation. Any fields not provided are set to null.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;globalId&quot; : &quot;system=http://www.mycompany.com/support&amp;id=1&quot;,
  &quot;application&quot; : {
    &quot;type&quot; : &quot;com.acme.tracker&quot;,
    &quot;name&quot; : &quot;My Acme Tracker&quot;
  },
  &quot;relationship&quot; : &quot;causes&quot;,
  &quot;object&quot; : {
    &quot;url&quot; : &quot;http://www.mycompany.com/support?id=1&quot;,
    &quot;title&quot; : &quot;TSTSUP-111&quot;,
    &quot;summary&quot; : &quot;Crazy customer support issue&quot;,
    &quot;icon&quot; : {
      &quot;url16x16&quot; : &quot;http://www.mycompany.com/support/ticket.png&quot;,
      &quot;title&quot; : &quot;Support Ticket&quot;
    },
    &quot;status&quot; : {
      &quot;resolved&quot; : true,
      &quot;icon&quot; : {
        &quot;url16x16&quot; : &quot;http://www.mycompany.com/support/resolved.png&quot;,
        &quot;title&quot; : &quot;Case Closed&quot;,
        &quot;link&quot; : &quot;http://www.mycompany.com/support?id=1&amp;details=closed&quot;
      }
    }
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Returned if the remote issue link was updated successfully.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if the calling user is not authenticated.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;errorMessages&quot; : [ ],
  &quot;errors&quot; : {
    &quot;title&quot; : &quot;'title' is required.&quot;
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the input is invalid (e.g. missing required fields, invalid values, and so forth).</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the calling user does not have permission to update the remote issue link, or if issue linking is
      disabled.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{issueIdOrKey}/remotelink">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueIdOrKey" style="template" type="xs:string">
                    <ns2:doc>the issue to view the remote issue links for</ns2:doc>
                </ns2:param>
                <ns2:method id="createOrUpdateRemoteIssueLink" name="POST">
                    <ns2:doc>Creates or updates a remote issue link from a JSON representation. If a globalId is provided and a remote issue link
 exists with that globalId, the remote issue link is updated. Otherwise, the remote issue link is created.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;globalId&quot; : &quot;system=http://www.mycompany.com/support&amp;id=1&quot;,
  &quot;application&quot; : {
    &quot;type&quot; : &quot;com.acme.tracker&quot;,
    &quot;name&quot; : &quot;My Acme Tracker&quot;
  },
  &quot;relationship&quot; : &quot;causes&quot;,
  &quot;object&quot; : {
    &quot;url&quot; : &quot;http://www.mycompany.com/support?id=1&quot;,
    &quot;title&quot; : &quot;TSTSUP-111&quot;,
    &quot;summary&quot; : &quot;Crazy customer support issue&quot;,
    &quot;icon&quot; : {
      &quot;url16x16&quot; : &quot;http://www.mycompany.com/support/ticket.png&quot;,
      &quot;title&quot; : &quot;Support Ticket&quot;
    },
    &quot;status&quot; : {
      &quot;resolved&quot; : true,
      &quot;icon&quot; : {
        &quot;url16x16&quot; : &quot;http://www.mycompany.com/support/resolved.png&quot;,
        &quot;title&quot; : &quot;Case Closed&quot;,
        &quot;link&quot; : &quot;http://www.mycompany.com/support?id=1&amp;details=closed&quot;
      }
    }
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation element="remote issue link" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 10000,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/issue/MKY-1/remotelink/10000&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a link to the created/updated remote issue link.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if the calling user is not authenticated.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;errorMessages&quot; : [ ],
  &quot;errors&quot; : {
    &quot;title&quot; : &quot;'title' is required.&quot;
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the input is invalid (e.g. missing required fields, invalid values, and so forth).</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the calling user does not have permission to create/update the remote issue link, or if issue linking
      is disabled.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="deleteRemoteIssueLinkByGlobalId" name="DELETE">
                    <ns2:doc>Delete the remote issue link with the given global id on the issue.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="globalId" style="query" type="xs:string">
                            <ns2:doc>the global id of the remote issue link</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Returned if the remote issue link was removed successfully.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the issue or remote issue link do not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if the calling user is not authenticated.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the calling user does not have permission to delete the remote issue link, or if issue linking is
      disabled.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="getRemoteIssueLinks" name="GET">
                    <ns2:doc>A REST sub-resource representing the remote issue links on the issue.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="globalId" style="query" type="xs:string">
                            <ns2:doc>The id of the remote issue link to be returned.  If null (not provided) all remote links for the
 issue are returned.
 &lt;p&gt;For a fullexplanation of Issue Link fields please refer to
 &lt;a href=&quot;https://developer.atlassian.com/display/JIRADEV/Fields+in+Remote+Issue+Links&quot;&gt;https://developer.atlassian.com/display/JIRADEV/Fields+in+Remote+Issue+Links&lt;/a&gt;&lt;/p&gt;</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the issue or remote issue link do not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>[ {
  &quot;id&quot; : 10000,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/issue/MKY-1/remotelink/10000&quot;,
  &quot;globalId&quot; : &quot;system=http://www.mycompany.com/support&amp;id=1&quot;,
  &quot;application&quot; : {
    &quot;type&quot; : &quot;com.acme.tracker&quot;,
    &quot;name&quot; : &quot;My Acme Tracker&quot;
  },
  &quot;relationship&quot; : &quot;causes&quot;,
  &quot;object&quot; : {
    &quot;url&quot; : &quot;http://www.mycompany.com/support?id=1&quot;,
    &quot;title&quot; : &quot;TSTSUP-111&quot;,
    &quot;summary&quot; : &quot;Crazy customer support issue&quot;,
    &quot;icon&quot; : {
      &quot;url16x16&quot; : &quot;http://www.mycompany.com/support/ticket.png&quot;,
      &quot;title&quot; : &quot;Support Ticket&quot;
    },
    &quot;status&quot; : {
      &quot;resolved&quot; : true,
      &quot;icon&quot; : {
        &quot;url16x16&quot; : &quot;http://www.mycompany.com/support/resolved.png&quot;,
        &quot;title&quot; : &quot;Case Closed&quot;,
        &quot;link&quot; : &quot;http://www.mycompany.com/support?id=1&amp;details=closed&quot;
      }
    }
  }
}, {
  &quot;id&quot; : 10001,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/issue/MKY-1/remotelink/10001&quot;,
  &quot;globalId&quot; : &quot;system=http://www.anothercompany.com/tester&amp;id=1234&quot;,
  &quot;application&quot; : {
    &quot;type&quot; : &quot;com.acme.tester&quot;,
    &quot;name&quot; : &quot;My Acme Tester&quot;
  },
  &quot;relationship&quot; : &quot;is tested by&quot;,
  &quot;object&quot; : {
    &quot;url&quot; : &quot;http://www.anothercompany.com/tester/testcase/1234&quot;,
    &quot;title&quot; : &quot;Test Case #1234&quot;,
    &quot;summary&quot; : &quot;Test that the submit button saves the thing&quot;,
    &quot;icon&quot; : {
      &quot;url16x16&quot; : &quot;http://www.anothercompany.com/tester/images/testcase.gif&quot;,
      &quot;title&quot; : &quot;Test Case&quot;
    },
    &quot;status&quot; : {
      &quot;resolved&quot; : false,
      &quot;icon&quot; : {
        &quot;url16x16&quot; : &quot;http://www.anothercompany.com/tester/images/person/fred.gif&quot;,
        &quot;title&quot; : &quot;Tested by Fred Jones&quot;,
        &quot;link&quot; : &quot;http://www.anothercompany.com/tester/person?username=fred&quot;
      }
    }
  }
} ]</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Information on the remote issue links for the current issue.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if the calling user is not authenticated.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the calling user does not have permission to view the remote issue links, or if issue linking is
      disabled.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{issueIdOrKey}/worklog/{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string">
                    <ns2:doc>a String containing the work log id</ns2:doc>
                </ns2:param>
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueIdOrKey" style="template" type="xs:string">
                    <ns2:doc>a string containing the issue id or key the worklog belongs to</ns2:doc>
                </ns2:param>
                <ns2:method id="updateWorklog" name="PUT">
                    <ns2:doc>Updates an existing worklog entry using its JSON representation.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="adjustEstimate" style="query" type="xs:string">
                            <ns2:doc>(optional) allows you to provide specific instructions to update the remaining time estimate of the issue.  Valid values are
      &lt;ul&gt;
      &lt;li&gt;&quot;new&quot; - sets the estimate to a specific value&lt;/li&gt;
      &lt;li&gt;&quot;leave&quot;- leaves the estimate as is&lt;/li&gt;
      &lt;li&gt;&quot;auto&quot;- Default option.  Will automatically adjust the value based on the new timeSpent specified on the worklog&lt;/li&gt; &lt;/ul&gt;</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="newEstimate" style="query" type="xs:string">
                            <ns2:doc>(required when &quot;new&quot; is selected for adjustEstimate) the new value for the remaining estimate field.</ns2:doc>
                        </ns2:param>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/10010/worklog/10000&quot;,
  &quot;author&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;updateAuthor&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;comment&quot; : &quot;I did some work here.&quot;,
  &quot;visibility&quot; : {
    &quot;type&quot; : &quot;group&quot;,
    &quot;value&quot; : &quot;jira-developers&quot;
  },
  &quot;started&quot; : &quot;2013-05-19T06:30:50.707-0500&quot;,
  &quot;timeSpent&quot; : &quot;3h 20m&quot;,
  &quot;timeSpentSeconds&quot; : 12000,
  &quot;id&quot; : &quot;100028&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/10010/worklog/10000&quot;,
  &quot;author&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;updateAuthor&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;comment&quot; : &quot;I did some work here.&quot;,
  &quot;visibility&quot; : {
    &quot;type&quot; : &quot;group&quot;,
    &quot;value&quot; : &quot;jira-developers&quot;
  },
  &quot;started&quot; : &quot;2013-05-19T06:30:50.707-0500&quot;,
  &quot;timeSpent&quot; : &quot;3h 20m&quot;,
  &quot;timeSpentSeconds&quot; : 12000,
  &quot;id&quot; : &quot;100028&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if update was successful</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if the input is invalid (e.g. missing required fields, invalid values, and so forth).</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the calling user does not have permission to update the worklog</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="deleteWorklog" name="DELETE">
                    <ns2:doc>Deletes an existing worklog entry .</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="adjustEstimate" style="query" type="xs:string">
                            <ns2:doc>(optional) allows you to provide specific instructions to update the remaining time estimate of the issue.  Valid values are
      &lt;ul&gt;
      &lt;li&gt;&quot;new&quot; - sets the estimate to a specific value&lt;/li&gt;
      &lt;li&gt;&quot;leave&quot;- leaves the estimate as is&lt;/li&gt;
      &lt;li&gt;&quot;manual&quot; - specify a specific amount to increase remaining estimate by&lt;/li&gt;
      &lt;li&gt;&quot;auto&quot;- Default option.  Will automatically adjust the value based on the new timeSpent specified on the worklog&lt;/li&gt; &lt;/ul&gt;</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="newEstimate" style="query" type="xs:string">
                            <ns2:doc>(required when &quot;new&quot; is selected for adjustEstimate) the new value for the remaining estimate field. e.g. &quot;2d&quot;</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="increaseBy" style="query" type="xs:string">
                            <ns2:doc>(required when &quot;manual&quot; is selected for adjustEstimate) the amount to increase the remaining estimate by e.g. &quot;2d&quot;</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Returned if delete was successful</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if the input is invalid (e.g. missing required fields, invalid values, and so forth).</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the calling user does not have permission to delete the worklog</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="getWorklog" name="GET">
                    <ns2:doc>Returns a specific worklog.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the work log with the given id does not exist or if the currently authenticated user does not
      have permission to view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="worklog" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/10010/worklog/10000&quot;,
  &quot;author&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;updateAuthor&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;comment&quot; : &quot;I did some work here.&quot;,
  &quot;visibility&quot; : {
    &quot;type&quot; : &quot;group&quot;,
    &quot;value&quot; : &quot;jira-developers&quot;
  },
  &quot;started&quot; : &quot;2013-05-19T06:30:50.707-0500&quot;,
  &quot;timeSpent&quot; : &quot;3h 20m&quot;,
  &quot;timeSpentSeconds&quot; : 12000,
  &quot;id&quot; : &quot;100028&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the work log with the given id exists and the currently authenticated user has permission to
      view it. The returned response contains a full representation of the work log in JSON format.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{issueIdOrKey}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueIdOrKey" style="template" type="xs:string">
                    <ns2:doc>a String containing an issue id or key</ns2:doc>
                </ns2:param>
                <ns2:method id="editIssue" name="PUT">
                    <ns2:doc>Edits an issue from a JSON representation.
 The issue can either be updated by setting explicit the field value(s)
 or by using an operation to change the field value.
 &lt;p&gt;
 The fields that can be updated, in either the fields parameter or the update parameter can be determined
 using the &lt;b&gt;/rest/api/2/issue/{issueIdOrKey}/editmeta&lt;/b&gt; resource.
 If a field is not configured to appear on the edit screen, then it will not be in the editmeta, and a field
 validation error will occur if it is submitted.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;update&quot; : {
    &quot;summary&quot; : [ {
      &quot;set&quot; : &quot;Bug in business logic&quot;
    } ],
    &quot;labels&quot; : [ {
      &quot;add&quot; : &quot;triaged&quot;
    }, {
      &quot;remove&quot; : &quot;blocker&quot;
    } ],
    &quot;components&quot; : [ {
      &quot;set&quot; : &quot;&quot;
    } ]
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>Returned if it updated the issue succesfully.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if the requested issue update failed.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="getIssue" name="GET">
                    <ns2:doc>Returns a full representation of the issue for the given issue key.

 &lt;p&gt;
  An issue JSON consists of the issue key, a collection of fields,
  a link to the workflow transition sub-resource, and (optionally) the HTML rendered values of any fields that support it
  (e.g. if wiki syntax is enabled for the description or comments).

  &lt;p&gt;
  The &lt;code&gt;fields&lt;/code&gt; param (which can be specified multiple times) gives a comma-separated list of fields
  to include in the response. This can be used to retrieve a subset of fields.
  A particular field can be excluded by prefixing it with a minus.
  &lt;p&gt;
   By default, all (&lt;code&gt;*all&lt;/code&gt;) fields are returned in this get-issue resource. Note: the default is different
   when doing a jql search -- the default there is just navigable fields (&lt;code&gt;*navigable&lt;/code&gt;).
  &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;*all&lt;/code&gt; - include all fields&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;*navigable&lt;/code&gt; - include just navigable fields&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;summary,comment&lt;/code&gt; - include just the summary and comments&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;-comment&lt;/code&gt; - include everything except comments (the default is &lt;code&gt;*all&lt;/code&gt; for get-issue)&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;*all,-comment&lt;/code&gt; - include everything except comments&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;
  JIRA will attempt to identify the issue by the &lt;code&gt;issueIdOrKey&lt;/code&gt; path parameter. This can be an issue id,
  or an issue key. If the issue cannot be found via an exact match, JIRA will also look for the issue in a case-insensitive way, or
  by looking to see if the issue was moved. In either of these cases, the request will proceed as normal (a 302 or other redirect
  will &lt;b&gt;not&lt;/b&gt; be returned). The issue key contained in the response will indicate the current value of issue's key.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="fields" style="query" type="xs:string">
                            <ns2:doc>the list of fields to return for the issue. By default, all fields are returned.</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="expand" style="query" type="xs:string"/>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested issue is not found, or the user does not have permission to view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="issue" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;expand&quot; : &quot;renderedFields,names,schema,transitions,operations,editmeta,changelog&quot;,
  &quot;id&quot; : &quot;10002&quot;,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/10002&quot;,
  &quot;key&quot; : &quot;EX-1&quot;,
  &quot;fields&quot; : {
    &quot;sub-tasks&quot; : [ {
      &quot;id&quot; : &quot;10000&quot;,
      &quot;type&quot; : {
        &quot;id&quot; : &quot;10000&quot;,
        &quot;name&quot; : &quot;&quot;,
        &quot;inward&quot; : &quot;Parent&quot;,
        &quot;outward&quot; : &quot;Sub-task&quot;
      },
      &quot;outwardIssue&quot; : {
        &quot;id&quot; : &quot;10003&quot;,
        &quot;key&quot; : &quot;EX-2&quot;,
        &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/EX-2&quot;,
        &quot;fields&quot; : {
          &quot;status&quot; : {
            &quot;iconUrl&quot; : &quot;http://www.example.com/jira//images/icons/statuses/open.png&quot;,
            &quot;name&quot; : &quot;Open&quot;
          }
        }
      }
    } ],
    &quot;timetracking&quot; : {
      &quot;originalEstimate&quot; : &quot;10m&quot;,
      &quot;remainingEstimate&quot; : &quot;3m&quot;,
      &quot;timeSpent&quot; : &quot;6m&quot;,
      &quot;originalEstimateSeconds&quot; : 600,
      &quot;remainingEstimateSeconds&quot; : 200,
      &quot;timeSpentSeconds&quot; : 400
    },
    &quot;project&quot; : {
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/project/EX&quot;,
      &quot;id&quot; : &quot;10000&quot;,
      &quot;key&quot; : &quot;EX&quot;,
      &quot;name&quot; : &quot;Example&quot;,
      &quot;avatarUrls&quot; : {
        &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=small&amp;pid=10000&quot;,
        &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=xsmall&amp;pid=10000&quot;,
        &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=medium&amp;pid=10000&quot;,
        &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=large&amp;pid=10000&quot;
      }
    },
    &quot;updated&quot; : 1,
    &quot;description&quot; : &quot;example bug report&quot;,
    &quot;issuelinks&quot; : [ {
      &quot;id&quot; : &quot;10001&quot;,
      &quot;type&quot; : {
        &quot;id&quot; : &quot;10000&quot;,
        &quot;name&quot; : &quot;Dependent&quot;,
        &quot;inward&quot; : &quot;depends on&quot;,
        &quot;outward&quot; : &quot;is depended by&quot;
      },
      &quot;outwardIssue&quot; : {
        &quot;id&quot; : &quot;10004L&quot;,
        &quot;key&quot; : &quot;PRJ-2&quot;,
        &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/PRJ-2&quot;,
        &quot;fields&quot; : {
          &quot;status&quot; : {
            &quot;iconUrl&quot; : &quot;http://www.example.com/jira//images/icons/statuses/open.png&quot;,
            &quot;name&quot; : &quot;Open&quot;
          }
        }
      }
    }, {
      &quot;id&quot; : &quot;10002&quot;,
      &quot;type&quot; : {
        &quot;id&quot; : &quot;10000&quot;,
        &quot;name&quot; : &quot;Dependent&quot;,
        &quot;inward&quot; : &quot;depends on&quot;,
        &quot;outward&quot; : &quot;is depended by&quot;
      },
      &quot;inwardIssue&quot; : {
        &quot;id&quot; : &quot;10004&quot;,
        &quot;key&quot; : &quot;PRJ-3&quot;,
        &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/PRJ-3&quot;,
        &quot;fields&quot; : {
          &quot;status&quot; : {
            &quot;iconUrl&quot; : &quot;http://www.example.com/jira//images/icons/statuses/open.png&quot;,
            &quot;name&quot; : &quot;Open&quot;
          }
        }
      }
    } ],
    &quot;attachment&quot; : [ {
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2.0/attachments/10000&quot;,
      &quot;filename&quot; : &quot;picture.jpg&quot;,
      &quot;author&quot; : {
        &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
        &quot;name&quot; : &quot;fred&quot;,
        &quot;avatarUrls&quot; : {
          &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
          &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
          &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
          &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
        },
        &quot;displayName&quot; : &quot;Fred F. User&quot;,
        &quot;active&quot; : false
      },
      &quot;created&quot; : &quot;2013-05-19T06:30:50.701-0500&quot;,
      &quot;size&quot; : 23123,
      &quot;mimeType&quot; : &quot;image/jpeg&quot;,
      &quot;content&quot; : &quot;http://www.example.com/jira/attachments/10000&quot;,
      &quot;thumbnail&quot; : &quot;http://www.example.com/jira/secure/thumbnail/10000&quot;
    } ],
    &quot;watcher&quot; : {
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/EX-1/watchers&quot;,
      &quot;isWatching&quot; : false,
      &quot;watchCount&quot; : 1,
      &quot;watchers&quot; : [ {
        &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
        &quot;name&quot; : &quot;fred&quot;,
        &quot;avatarUrls&quot; : {
          &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
          &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
          &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
          &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
        },
        &quot;displayName&quot; : &quot;Fred F. User&quot;,
        &quot;active&quot; : false
      } ]
    },
    &quot;comment&quot; : [ {
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/10010/comment/10000&quot;,
      &quot;id&quot; : &quot;10000&quot;,
      &quot;author&quot; : {
        &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
        &quot;name&quot; : &quot;fred&quot;,
        &quot;displayName&quot; : &quot;Fred F. User&quot;,
        &quot;active&quot; : false
      },
      &quot;body&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.&quot;,
      &quot;updateAuthor&quot; : {
        &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
        &quot;name&quot; : &quot;fred&quot;,
        &quot;displayName&quot; : &quot;Fred F. User&quot;,
        &quot;active&quot; : false
      },
      &quot;created&quot; : &quot;2013-05-19T06:30:50.472-0500&quot;,
      &quot;updated&quot; : &quot;2013-05-19T06:30:50.473-0500&quot;,
      &quot;visibility&quot; : {
        &quot;type&quot; : &quot;role&quot;,
        &quot;value&quot; : &quot;Administrators&quot;
      }
    } ],
    &quot;worklog&quot; : [ {
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/10010/worklog/10000&quot;,
      &quot;author&quot; : {
        &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
        &quot;name&quot; : &quot;fred&quot;,
        &quot;displayName&quot; : &quot;Fred F. User&quot;,
        &quot;active&quot; : false
      },
      &quot;updateAuthor&quot; : {
        &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
        &quot;name&quot; : &quot;fred&quot;,
        &quot;displayName&quot; : &quot;Fred F. User&quot;,
        &quot;active&quot; : false
      },
      &quot;comment&quot; : &quot;I did some work here.&quot;,
      &quot;visibility&quot; : {
        &quot;type&quot; : &quot;group&quot;,
        &quot;value&quot; : &quot;jira-developers&quot;
      },
      &quot;started&quot; : &quot;2013-05-19T06:30:50.707-0500&quot;,
      &quot;timeSpent&quot; : &quot;3h 20m&quot;,
      &quot;timeSpentSeconds&quot; : 12000,
      &quot;id&quot; : &quot;100028&quot;
    } ]
  },
  &quot;names&quot; : {
    &quot;sub-tasks&quot; : &quot;sub-tasks&quot;,
    &quot;timetracking&quot; : &quot;timetracking&quot;,
    &quot;project&quot; : &quot;project&quot;,
    &quot;updated&quot; : &quot;updated&quot;,
    &quot;description&quot; : &quot;description&quot;,
    &quot;issuelinks&quot; : &quot;issuelinks&quot;,
    &quot;attachment&quot; : &quot;attachment&quot;,
    &quot;watcher&quot; : &quot;watcher&quot;,
    &quot;comment&quot; : &quot;comment&quot;,
    &quot;worklog&quot; : &quot;worklog&quot;
  },
  &quot;schema&quot; : {
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a full representation of a JIRA issue in JSON format.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="deleteIssue" name="DELETE">
                    <ns2:doc>Delete an issue.

 If the issue has subtasks you must set the parameter deleteSubtasks=true to delete the issue.
 You cannot delete an issue without its subtasks also being deleted.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="deleteSubtasks" style="query" type="xs:string">
                            <ns2:doc>a String of true or false indicating that any subtasks should also be deleted.  If the
 issue has no subtasks this parameter is ignored.  If the issue has subtasks and this parameter is missing or false,
 then the issue will not be deleted and an error will be returned.</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Returned if the issue was removed successfully.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the issue does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if the calling user is not authenticated.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if an error occurs.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the calling user does not have permission to delete the issue.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{issueIdOrKey}/votes">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueIdOrKey" style="template" type="xs:string">
                    <ns2:doc>the issue the current user is unvoting on</ns2:doc>
                </ns2:param>
                <ns2:method id="addVote" name="POST">
                    <ns2:doc>Cast your vote in favour of an issue.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Nothing is returned on success.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the user cannot vote for any reason. (The user is the reporter, the user does
      not have permission to vote, voting is disabled in the instance, the issue does not exist, etc.)</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="getVotes" name="GET">
                    <ns2:doc>A REST sub-resource representing the voters on the issue.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the user cannot view the issue in question or voting is disabled.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/issue/MKY-1/votes&quot;,
  &quot;votes&quot; : 24,
  &quot;hasVoted&quot; : true,
  &quot;voters&quot; : [ {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  } ]
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Information about voting on the current issue.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="removeVote" name="DELETE">
                    <ns2:doc>Remove your vote from an issue. (i.e. &quot;unvote&quot;)</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Nothing is returned on success.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the user cannot remove a vote for any reason. (The user did not vote on the issue,
      the user is the reporter, voting is disabled, the issue does not exist, etc.)</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{issueIdOrKey}/comment/{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string"/>
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueIdOrKey" style="template" type="xs:string">
                    <ns2:doc>to get comments for</ns2:doc>
                </ns2:param>
                <ns2:method id="updateComment" name="PUT">
                    <ns2:doc>Updates an existing comment using its JSON representation.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="expand" style="query" type="xs:string">
                            <ns2:doc>optional flags: renderedBody (provides body rendered in HTML)</ns2:doc>
                        </ns2:param>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;body&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.&quot;,
  &quot;visibility&quot; : {
    &quot;type&quot; : &quot;role&quot;,
    &quot;value&quot; : &quot;Administrators&quot;
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/10010/comment/10000&quot;,
  &quot;id&quot; : &quot;10000&quot;,
  &quot;author&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;body&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.&quot;,
  &quot;updateAuthor&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;created&quot; : &quot;2013-05-19T06:30:50.472-0500&quot;,
  &quot;updated&quot; : &quot;2013-05-19T06:30:50.473-0500&quot;,
  &quot;visibility&quot; : {
    &quot;type&quot; : &quot;role&quot;,
    &quot;value&quot; : &quot;Administrators&quot;
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if update was successful</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if the input is invalid (e.g. missing required fields, invalid values, and so forth).</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="deleteComment" name="DELETE">
                    <ns2:doc>Deletes an existing comment .</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Returned if delete was successful</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if the input is invalid (e.g. missing required fields, invalid values, and so forth).</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="getComments" name="GET">
                    <ns2:doc>Returns all comments for an issue.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="expand" style="query" type="xs:string">
                            <ns2:doc>optional flags: renderedBody (provides body rendered in HTML)</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the issue with the given id/key does not exist or if the currently authenticated user does not
      have permission to view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;startAt&quot; : 0,
  &quot;maxResults&quot; : 1,
  &quot;total&quot; : 1,
  &quot;comments&quot; : [ {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/10010/comment/10000&quot;,
    &quot;id&quot; : &quot;10000&quot;,
    &quot;author&quot; : {
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
      &quot;name&quot; : &quot;fred&quot;,
      &quot;displayName&quot; : &quot;Fred F. User&quot;,
      &quot;active&quot; : false
    },
    &quot;body&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.&quot;,
    &quot;updateAuthor&quot; : {
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
      &quot;name&quot; : &quot;fred&quot;,
      &quot;displayName&quot; : &quot;Fred F. User&quot;,
      &quot;active&quot; : false
    },
    &quot;created&quot; : &quot;2013-05-19T06:30:50.472-0500&quot;,
    &quot;updated&quot; : &quot;2013-05-19T06:30:50.473-0500&quot;,
    &quot;visibility&quot; : {
      &quot;type&quot; : &quot;role&quot;,
      &quot;value&quot; : &quot;Administrators&quot;
    }
  } ]
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>returns a collection of comments associated with the issue, with count and pagination information.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="/bulk">
                <ns2:method id="createIssues" name="POST">
                    <ns2:doc>Creates issues or sub-tasks from a JSON representation.
 &lt;p&gt;
 Creates many issues in one bulk operation.
 &lt;p/&gt;
 Creating a sub-task is similar to creating a regular issue. More details can be found in createIssue section:
 {@link IssueResource#createIssue(IssueUpdateBean)}}</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;issueUpdates&quot; : [ {
    &quot;update&quot; : {
      &quot;worklog&quot; : [ {
        &quot;add&quot; : {
          &quot;started&quot; : &quot;2011-07-05T11:05:00.000+0000&quot;,
          &quot;timeSpent&quot; : &quot;60m&quot;
        }
      } ]
    },
    &quot;fields&quot; : {
      &quot;project&quot; : {
        &quot;id&quot; : &quot;10000&quot;
      },
      &quot;summary&quot; : &quot;something's wrong&quot;,
      &quot;issuetype&quot; : {
        &quot;id&quot; : &quot;10000&quot;
      },
      &quot;assignee&quot; : {
        &quot;name&quot; : &quot;homer&quot;
      },
      &quot;reporter&quot; : {
        &quot;name&quot; : &quot;smithers&quot;
      },
      &quot;priority&quot; : {
        &quot;id&quot; : &quot;20000&quot;
      },
      &quot;labels&quot; : [ &quot;bugfix&quot;, &quot;blitz_test&quot; ],
      &quot;timetracking&quot; : {
        &quot;originalEstimate&quot; : &quot;10&quot;,
        &quot;remainingEstimate&quot; : &quot;5&quot;
      },
      &quot;security&quot; : {
        &quot;id&quot; : &quot;10000&quot;
      },
      &quot;versions&quot; : [ {
        &quot;id&quot; : &quot;10000&quot;
      } ],
      &quot;environment&quot; : &quot;environment&quot;,
      &quot;description&quot; : &quot;description&quot;,
      &quot;duedate&quot; : &quot;2011-03-11&quot;,
      &quot;fixVersions&quot; : [ {
        &quot;id&quot; : &quot;10001&quot;
      } ],
      &quot;components&quot; : [ {
        &quot;id&quot; : &quot;10000&quot;
      } ],
      &quot;customfield_60000&quot; : &quot;jira-developers&quot;,
      &quot;customfield_20000&quot; : &quot;06/Jul/11 3:25 PM&quot;,
      &quot;customfield_80000&quot; : {
        &quot;value&quot; : &quot;red&quot;
      },
      &quot;customfield_40000&quot; : &quot;this is a text field&quot;,
      &quot;customfield_30000&quot; : [ &quot;10000&quot;, &quot;10002&quot; ],
      &quot;customfield_70000&quot; : [ &quot;jira-administrators&quot;, &quot;jira-users&quot; ],
      &quot;customfield_50000&quot; : &quot;this is a text area. big text.&quot;,
      &quot;customfield_10000&quot; : &quot;09/Jun/81&quot;
    }
  }, {
    &quot;update&quot; : {
    },
    &quot;fields&quot; : {
      &quot;project&quot; : {
        &quot;id&quot; : &quot;1000&quot;
      },
      &quot;summary&quot; : &quot;something's very wrong&quot;,
      &quot;issuetype&quot; : {
        &quot;id&quot; : &quot;10000&quot;
      },
      &quot;assignee&quot; : {
        &quot;name&quot; : &quot;jerry&quot;
      },
      &quot;reporter&quot; : {
        &quot;name&quot; : &quot;kosecki&quot;
      },
      &quot;priority&quot; : {
        &quot;id&quot; : &quot;20000&quot;
      },
      &quot;labels&quot; : [ &quot;new_release&quot; ],
      &quot;timetracking&quot; : {
        &quot;originalEstimate&quot; : &quot;15&quot;,
        &quot;remainingEstimate&quot; : &quot;5&quot;
      },
      &quot;security&quot; : {
        &quot;id&quot; : &quot;10000&quot;
      },
      &quot;versions&quot; : [ {
        &quot;id&quot; : &quot;10000&quot;
      } ],
      &quot;environment&quot; : &quot;environment&quot;,
      &quot;description&quot; : &quot;description&quot;,
      &quot;duedate&quot; : &quot;2011-04-16&quot;,
      &quot;fixVersions&quot; : [ {
        &quot;id&quot; : &quot;10001&quot;
      } ],
      &quot;components&quot; : [ {
        &quot;id&quot; : &quot;10000&quot;
      } ],
      &quot;customfield_60000&quot; : &quot;jira-developers&quot;,
      &quot;customfield_20000&quot; : &quot;06/Jul/11 3:25 PM&quot;,
      &quot;customfield_80000&quot; : {
        &quot;value&quot; : &quot;red&quot;
      },
      &quot;customfield_40000&quot; : &quot;this is a text field&quot;,
      &quot;customfield_30000&quot; : [ &quot;10000&quot;, &quot;10002&quot; ],
      &quot;customfield_70000&quot; : [ &quot;jira-administrators&quot;, &quot;jira-users&quot; ],
      &quot;customfield_50000&quot; : &quot;this is a text area. big text.&quot;,
      &quot;customfield_10000&quot; : &quot;09/Jun/81&quot;
    }
  } ]
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation element="issue" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;issues&quot; : [ {
    &quot;id&quot; : &quot;10000&quot;,
    &quot;key&quot; : &quot;TST-24&quot;,
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/10000&quot;
  }, {
    &quot;id&quot; : &quot;10001&quot;,
    &quot;key&quot; : &quot;TST-25&quot;,
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/10001&quot;
  } ],
  &quot;errors&quot; : [ ]
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a link to the created issue.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;status&quot; : 400,
  &quot;elementErrors&quot; : {
    &quot;errorMessages&quot; : [ &quot;Field 'priority' is required&quot; ],
    &quot;errors&quot; : {
    }
  },
  &quot;failedElementNumber&quot; : 3
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the input is invalid (e.g. missing required fields, invalid field values, and so forth).</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{issueIdOrKey}/comment">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueIdOrKey" style="template" type="xs:string">
                    <ns2:doc>a string containing the issue id or key the comment will be added to</ns2:doc>
                </ns2:param>
                <ns2:method id="getComments" name="GET">
                    <ns2:doc>Returns all comments for an issue.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="expand" style="query" type="xs:string">
                            <ns2:doc>optional flags: renderedBody (provides body rendered in HTML)</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the issue with the given id/key does not exist or if the currently authenticated user does not
      have permission to view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;startAt&quot; : 0,
  &quot;maxResults&quot; : 1,
  &quot;total&quot; : 1,
  &quot;comments&quot; : [ {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/10010/comment/10000&quot;,
    &quot;id&quot; : &quot;10000&quot;,
    &quot;author&quot; : {
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
      &quot;name&quot; : &quot;fred&quot;,
      &quot;displayName&quot; : &quot;Fred F. User&quot;,
      &quot;active&quot; : false
    },
    &quot;body&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.&quot;,
    &quot;updateAuthor&quot; : {
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
      &quot;name&quot; : &quot;fred&quot;,
      &quot;displayName&quot; : &quot;Fred F. User&quot;,
      &quot;active&quot; : false
    },
    &quot;created&quot; : &quot;2013-05-19T06:30:50.472-0500&quot;,
    &quot;updated&quot; : &quot;2013-05-19T06:30:50.473-0500&quot;,
    &quot;visibility&quot; : {
      &quot;type&quot; : &quot;role&quot;,
      &quot;value&quot; : &quot;Administrators&quot;
    }
  } ]
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>returns a collection of comments associated with the issue, with count and pagination information.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="addComment" name="POST">
                    <ns2:doc>Adds a new comment to an issue.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="expand" style="query" type="xs:string">
                            <ns2:doc>optional flags: renderedBody (provides body rendered in HTML)</ns2:doc>
                        </ns2:param>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;body&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.&quot;,
  &quot;visibility&quot; : {
    &quot;type&quot; : &quot;role&quot;,
    &quot;value&quot; : &quot;Administrators&quot;
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="201">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/10010/comment/10000&quot;,
  &quot;id&quot; : &quot;10000&quot;,
  &quot;author&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;body&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.&quot;,
  &quot;updateAuthor&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;created&quot; : &quot;2013-05-19T06:30:50.472-0500&quot;,
  &quot;updated&quot; : &quot;2013-05-19T06:30:50.473-0500&quot;,
  &quot;visibility&quot; : {
    &quot;type&quot; : &quot;role&quot;,
    &quot;value&quot; : &quot;Administrators&quot;
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if add was successful</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if the input is invalid (e.g. missing required fields, invalid values, and so forth).</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{issueIdOrKey}/assignee">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueIdOrKey" style="template" type="xs:string">
                    <ns2:doc>a String containing an issue key</ns2:doc>
                </ns2:param>
                <ns2:method id="assign" name="PUT">
                    <ns2:doc>Assigns an issue to a user.
 You can use this resource to assign issues when the user submitting the request has the assign permission but not the
 edit issue permission.
 If the name is &quot;-1&quot; automatic assignee is used.  A null name will remove the assignee.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;name&quot; : &quot;harry&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Returned if the issue is successfully assigned.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if either the issue or the user does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if the calling user does not have permission to assign the issue.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if there is a problem with the received user representation.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="issueLink">
            <ns2:doc>The Link Issue Resource provides functionality to manage issue links.</ns2:doc>
            <ns2:method id="linkIssues" name="POST">
                <ns2:doc>Creates an issue link between two issues.
 The user requires the link issue permission for the issue which will be linked to another issue.
 The specified link type in the request is used to create the link and will create a link from the first issue
 to the second issue using the outward description. It also create a link from the second issue to the first issue using the
 inward description of the issue link type.
 It will add the supplied comment to the first issue. The comment can have a restriction who can view it.
 If group is specified, only users of this group can view this comment, if roleLevel is specified only users who have the specified role can view this comment.
 The user who creates the issue link needs to belong to the specified group or have the specified role.</ns2:doc>
                <ns2:request>
                    <ns2:representation mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;type&quot; : {
    &quot;name&quot; : &quot;Duplicate&quot;
  },
  &quot;inwardIssue&quot; : {
    &quot;key&quot; : &quot;HSP-1&quot;
  },
  &quot;outwardIssue&quot; : {
    &quot;key&quot; : &quot;MKY-1&quot;
  },
  &quot;comment&quot; : {
    &quot;body&quot; : &quot;Linked related issue!&quot;,
    &quot;visibility&quot; : {
      &quot;type&quot; : &quot;group&quot;,
      &quot;value&quot; : &quot;jira-users&quot;
    }
  }
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                    </ns2:representation>
                </ns2:request>
                <ns2:response>
                    <ns2:representation status="404">
                        <ns2:doc>If issue linking is disabled or
      it failed to find one of the issues (issue might exist, but it is not visible for this user) or
      it failed to find the specified issue link type.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="200" mediaType="application/json">
                        <ns2:doc>if the issue link was created successfully.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="401">
                        <ns2:doc>if the user does not have the link issue permission for the issue, which will be linked to another issue.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="400">
                        <ns2:doc>if it can't create the supplied comment.
      The response will contain an error message indicating why it failed to create the comment.
      No issue link will be created if it failed to create the comment.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="500">
                        <ns2:doc>if an error occurred when creating the issue link or the comment.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:resource path="{linkId}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="linkId" style="template" type="xs:string">
                    <ns2:doc>the issue link id.</ns2:doc>
                </ns2:param>
                <ns2:method id="deleteIssueLink" name="DELETE">
                    <ns2:doc>Deletes an issue link with the specified id.
 To be able to delete an issue link you must be able to view both issues and must have the link issue permission
 for at least one of the issues.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>If it successfully deleted the issue link.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>If issue linking is disabled or
      it failed to find an issue link with the specified id. Either because none exists with this id, or the user
      doesn't have the permission to see one of the linked issues.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json"/>
                        <ns2:representation status="401">
                            <ns2:doc>if the user does not have the link issue permission for the source or destination issue of the issue link.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>If the specified issue link id is invalid.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="500">
                            <ns2:doc>if an error occurred when deleting the issue link or the comment.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="getIssueLink" name="GET">
                    <ns2:doc>Returns an issue link with the specified id.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>If issue linking is disabled or
      it failed to find an issue link with the specified id. Either because none exists with this id, or the user
      doesn't have the permission to see one of the linked issues.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : &quot;10001&quot;,
  &quot;type&quot; : {
    &quot;id&quot; : &quot;1000&quot;,
    &quot;name&quot; : &quot;Duplicate&quot;,
    &quot;inward&quot; : &quot;Duplicated by&quot;,
    &quot;outward&quot; : &quot;Duplicates&quot;,
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2//issueLinkType/1000&quot;
  },
  &quot;inwardIssue&quot; : {
    &quot;id&quot; : &quot;10004&quot;,
    &quot;key&quot; : &quot;PRJ-3&quot;,
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/PRJ-3&quot;,
    &quot;fields&quot; : {
      &quot;status&quot; : {
        &quot;iconUrl&quot; : &quot;http://www.example.com/jira//images/icons/statuses/open.png&quot;,
        &quot;name&quot; : &quot;Open&quot;
      }
    }
  },
  &quot;outwardIssue&quot; : {
    &quot;id&quot; : &quot;10004L&quot;,
    &quot;key&quot; : &quot;PRJ-2&quot;,
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/PRJ-2&quot;,
    &quot;fields&quot; : {
      &quot;status&quot; : {
        &quot;iconUrl&quot; : &quot;http://www.example.com/jira//images/icons/statuses/open.png&quot;,
        &quot;name&quot; : &quot;Open&quot;
      }
    }
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>if the user does not have the link issue permission for the issue, which will be linked to another issue.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>If the specified issue link id is invalid.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="500">
                            <ns2:doc>if an error occurred when creating the issue link or the comment.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="screens">
            <ns2:resource path="{screenId}/tabs/{tabId}/fields/{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string"/>
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screenId" style="template" type="xs:long">
                    <ns2:doc>id of screen</ns2:doc>
                </ns2:param>
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tabId" style="template" type="xs:long">
                    <ns2:doc>id of tab</ns2:doc>
                </ns2:param>
                <ns2:method id="removeField" name="DELETE">
                    <ns2:doc>Removes field from given tab</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="201">
                            <ns2:doc>Successfully removed field from tab</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if you do not have permissions</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if screen or tab does not exist</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{screenId}/tabs">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screenId" style="template" type="xs:long">
                    <ns2:doc>id of screen</ns2:doc>
                </ns2:param>
                <ns2:method id="getAllTabs" name="GET">
                    <ns2:doc>Returns a list of all tabs for the given screen</ns2:doc>
                    <ns2:response>
                        <ns2:representation element="List of tabs" status="200" mediaType="application/json">
                            <ns2:doc>Contains a full representation of all visible tabs in JSON.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if you do not have permissions</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if screen does not exist</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="addTab" name="POST">
                    <ns2:doc>Creates tab for given screen</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json"/>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation element="Newly created tab" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 10000,
  &quot;name&quot; : &quot;Fields Tab&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Newly created tab in JSON.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if you do not have permissions</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if screen does not exist or tab name is invalid</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{screenId}/tabs/{tabId}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screenId" style="template" type="xs:long">
                    <ns2:doc>id of screen</ns2:doc>
                </ns2:param>
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tabId" style="template" type="xs:long"/>
                <ns2:method id="deleteTab" name="DELETE">
                    <ns2:doc>Deletes tab to give screen</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="201">
                            <ns2:doc>Successfully deleted tab</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if you do not have permissions</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if screen or tab does not exist</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="renameTab" name="PUT">
                    <ns2:doc>Renames tab on given screen</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json"/>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation element="Modified tab" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 10000,
  &quot;name&quot; : &quot;Fields Tab&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Modified tab in JSON.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if you do not have permissions</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if screen does not exist or tab name is invalid</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{screenId}/tabs/{tabId}/move/{pos}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screenId" style="template" type="xs:long">
                    <ns2:doc>id of screen</ns2:doc>
                </ns2:param>
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tabId" style="template" type="xs:long">
                    <ns2:doc>id of tab</ns2:doc>
                </ns2:param>
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pos" style="template" type="xs:int">
                    <ns2:doc>position of tab</ns2:doc>
                </ns2:param>
                <ns2:method id="moveTab" name="POST">
                    <ns2:doc>Moves tab position</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="201">
                            <ns2:doc>Successfully moved tab</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if you do not have permissions</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if screen or tab does not exist</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{screenId}/availableFields">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screenId" style="template" type="xs:long">
                    <ns2:doc>id of screen</ns2:doc>
                </ns2:param>
                <ns2:method id="getFieldsToAdd" name="GET">
                    <ns2:doc>Gets available fields for screen. i.e ones that haven't already been added.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="200">
                            <ns2:doc>List of available fields for screen</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if you do not have permissions</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if screen does not exist</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{screenId}/tabs/{tabId}/fields/{id}/move">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string"/>
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screenId" style="template" type="xs:long">
                    <ns2:doc>id of screen</ns2:doc>
                </ns2:param>
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tabId" style="template" type="xs:long">
                    <ns2:doc>id of tab</ns2:doc>
                </ns2:param>
                <ns2:method id="moveField" name="POST">
                    <ns2:doc>Moves field on the given tab</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json"/>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="201">
                            <ns2:doc>Successfully moved tab</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if you do not have permissions</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if screen or tab does not exist. Or move cooridinates invalid.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="addToDefault/{fieldId}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="fieldId" style="template" type="xs:string">
                    <ns2:doc>id of field / custom field</ns2:doc>
                </ns2:param>
                <ns2:method id="addFieldToDefaultScreen" name="POST">
                    <ns2:doc>Adds field or custom field to the default tab</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="201"/>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if you do not have administrator permissions</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if screen, tab or field does not exist or field is already present on a selected tab</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{screenId}/tabs/{tabId}/fields">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="screenId" style="template" type="xs:long">
                    <ns2:doc>id of screen</ns2:doc>
                </ns2:param>
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tabId" style="template" type="xs:long">
                    <ns2:doc>id of tab</ns2:doc>
                </ns2:param>
                <ns2:method id="getAllFields" name="GET">
                    <ns2:doc>Gets all fields for a given tab</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="200">
                            <ns2:doc>List of fields for given tab</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if you do not have permissions</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if screen or tab does not exist</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="addField" name="POST">
                    <ns2:doc>Adds field to the given tab</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json"/>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : &quot;summary&quot;,
  &quot;name&quot; : &quot;Summary&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Newly added field as json</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if you do not have permissions</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if screen,tab or field does not exist.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="serverInfo">
            <ns2:method id="getServerInfo" name="GET">
                <ns2:doc>Returns general information about the current JIRA server.</ns2:doc>
                <ns2:request>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="doHealthCheck" style="query" type="xs:boolean"/>
                </ns2:request>
                <ns2:response>
                    <ns2:representation element="serverInfo" status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;baseUrl&quot; : &quot;http://localhost:8080/jira&quot;,
  &quot;version&quot; : &quot;5.0-SNAPSHOT&quot;,
  &quot;versionNumbers&quot; : [ 5, 0, 0 ],
  &quot;buildNumber&quot; : 582,
  &quot;buildDate&quot; : &quot;2013-05-19T06:30:50.036-0500&quot;,
  &quot;serverTime&quot; : &quot;2013-05-19T06:30:50.036-0500&quot;,
  &quot;scmInfo&quot; : &quot;1f51473f5c7b75c1a69a0090f4832cdc5053702a&quot;,
  &quot;buildPartnerName&quot; : &quot;Example Partner Co.&quot;,
  &quot;serverTitle&quot; : &quot;My Shiny New JIRA Server&quot;
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returns a full representation of the server info in JSON format</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
        </ns2:resource>
        <ns2:resource path="component">
            <ns2:method id="createComponent" name="POST">
                <ns2:doc>Create a component via POST.</ns2:doc>
                <ns2:request>
                    <ns2:representation mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;name&quot; : &quot;Component 1&quot;,
  &quot;description&quot; : &quot;This is a JIRA component&quot;,
  &quot;leadUserName&quot; : &quot;fred&quot;,
  &quot;assigneeType&quot; : &quot;PROJECT_LEAD&quot;,
  &quot;isAssigneeTypeValid&quot; : false,
  &quot;project&quot; : &quot;PXA&quot;
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                    </ns2:representation>
                </ns2:request>
                <ns2:response>
                    <ns2:representation status="404">
                        <ns2:doc>Returned if the project does not exist or the currently authenticated user does not have permission to
      view it.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="201" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/component/10000&quot;,
  &quot;id&quot; : &quot;10000&quot;,
  &quot;name&quot; : &quot;Component 1&quot;,
  &quot;description&quot; : &quot;This is a JIRA component&quot;,
  &quot;lead&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;assigneeType&quot; : &quot;PROJECT_LEAD&quot;,
  &quot;assignee&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;realAssigneeType&quot; : &quot;PROJECT_LEAD&quot;,
  &quot;realAssignee&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;isAssigneeTypeValid&quot; : false
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returned if the component is created successfully.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="401">
                        <ns2:doc>Returned if the caller is not logged in and does not have permission to create components in
      the project.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="403">
                        <ns2:doc>Returned if the caller is authenticated and does not have permission to create components in the project.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:resource path="{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string">
                    <ns2:doc>a String containing the component key</ns2:doc>
                </ns2:param>
                <ns2:method id="delete" name="DELETE">
                    <ns2:doc>Delete a project component.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="moveIssuesTo" style="query" type="xs:string">
                            <ns2:doc>The new component applied to issues whose 'id' component will be deleted.
 If this value is null, then the 'id' component is simply removed from the related isues.</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Returned if the component is successfully deleted.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the component does not exist or the currently authenticated user does not have permission to
      view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the currently authenticated user does not have permission to delete the component.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="updateComponent" name="PUT">
                    <ns2:doc>Modify a component via PUT. Any fields present in the PUT will override existing values. As a convenience, if a field
 is not present, it is silently ignored.

 If leadUserName is an empty string (&quot;&quot;) the component lead will be removed.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;name&quot; : &quot;Component 1&quot;,
  &quot;description&quot; : &quot;This is a JIRA component&quot;,
  &quot;leadUserName&quot; : &quot;fred&quot;,
  &quot;assigneeType&quot; : &quot;PROJECT_LEAD&quot;,
  &quot;isAssigneeTypeValid&quot; : false
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the component does not exist or the currently authenticated user does not have permission to
      view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>Returned if the component exists and the currently authenticated user has permission to edit it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the currently authenticated user does not have permission to edit the component.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="getComponent" name="GET">
                    <ns2:doc>Returns a project component.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if there is no component with the given key, or if the calling user does not have permission to
      view the component.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="component" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/component/10000&quot;,
  &quot;id&quot; : &quot;10000&quot;,
  &quot;name&quot; : &quot;Component 1&quot;,
  &quot;description&quot; : &quot;This is a JIRA component&quot;,
  &quot;lead&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;assigneeType&quot; : &quot;PROJECT_LEAD&quot;,
  &quot;assignee&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;realAssigneeType&quot; : &quot;PROJECT_LEAD&quot;,
  &quot;realAssignee&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;isAssigneeTypeValid&quot; : false
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a full JSON representation of a project component.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{id}/relatedIssueCounts">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string">
                    <ns2:doc>a String containing the component id</ns2:doc>
                </ns2:param>
                <ns2:method id="getComponentRelatedIssues" name="GET">
                    <ns2:doc>Returns counts of issues related to this component.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the component does not exist or the currently authenticated user does not have permission to
      view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="issue Count Bean" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/component/10000&quot;,
  &quot;issueCount&quot; : 23
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the component exists and the currently authenticated user has permission to view it. Contains
      counts of issues related to this component.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="group">
            <ns2:method id="getGroup" name="GET">
                <ns2:doc>Returns REST representation for the requested group. Allows to get list of active users belonging to the
 specified group and its subgroups if &quot;users&quot; expand option is provided. You can page through users list by using
 indexes in expand param. For example to get users from index 10 to index 15 use &quot;users[10:15]&quot; expand value. This
 will return 6 users (if there are at least 16 users in this group). Indexes are 0-based and inclusive.</ns2:doc>
                <ns2:request>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="groupname" style="query" type="xs:string">
                        <ns2:doc>A name of requested group.</ns2:doc>
                    </ns2:param>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="expand" style="query" type="xs:string">
                        <ns2:doc>List of fields to expand. Currently only available expand is &quot;users&quot;.</ns2:doc>
                    </ns2:param>
                </ns2:request>
                <ns2:response>
                    <ns2:representation status="404">
                        <ns2:doc>Returned if the requested group was not found.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation element="group" status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;name&quot; : &quot;jira-administrators&quot;,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/group?groupname=jira-administrators&quot;,
  &quot;users&quot; : {
    &quot;size&quot; : 1,
    &quot;items&quot; : [ {
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
      &quot;name&quot; : &quot;fred&quot;,
      &quot;displayName&quot; : &quot;Fred F. User&quot;,
      &quot;active&quot; : false
    } ],
    &quot;max-results&quot; : 50,
    &quot;start-index&quot; : 0,
    &quot;end-index&quot; : 0
  },
  &quot;expand&quot; : &quot;users&quot;
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returns full representation of a JIRA group in JSON format.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="401">
                        <ns2:doc>Returned if the current user is not authenticated.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="400">
                        <ns2:doc>Returned if user requested an empty group name.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="403">
                        <ns2:doc>Returned if the current user does not have administrator permissions.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
        </ns2:resource>
        <ns2:resource path="project/{projectKey}/role">
            <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="projectKey" style="template" type="xs:string">
                <ns2:doc>the project key</ns2:doc>
            </ns2:param>
            <ns2:method id="getProjectRoles" name="GET">
                <ns2:doc>Contains a list of roles in this project with links to full details.</ns2:doc>
                <ns2:response>
                    <ns2:representation status="404">
                        <ns2:doc>Returned if the project is not found, or the calling user does not have permission to view it.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;Users&quot; : &quot;http://www.example.com/jira/rest/api/2/project/MKY/role/10001&quot;,
  &quot;Administrators&quot; : &quot;http://www.example.com/jira/rest/api/2/project/MKY/role/10002&quot;,
  &quot;Developers&quot; : &quot;http://www.example.com/jira/rest/api/2/project/MKY/role/10000&quot;
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returned if the project exists and the user has permission to view it. A maps of roles to URIs containing
      full details for that role.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:resource path="{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:long">
                    <ns2:doc>the project role id</ns2:doc>
                </ns2:param>
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="projectKey" style="template" type="xs:string">
                    <ns2:doc>the project key</ns2:doc>
                </ns2:param>
                <ns2:method id="addActorUsers" name="POST">
                    <ns2:doc>Add an actor to a project role.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{ &quot;user&quot; : [&quot;admin&quot;] }  or
{ &quot;group&quot; : [&quot;jira-developers&quot;] }</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the actor could not be added to the project role</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/project/MKY/role/10360&quot;,
  &quot;name&quot; : &quot;Developers&quot;,
  &quot;id&quot; : 10360,
  &quot;description&quot; : &quot;A project role that represents developers in a project&quot;,
  &quot;actors&quot; : [ {
    &quot;id&quot; : 10240,
    &quot;displayName&quot; : &quot;jira-developers&quot;,
    &quot;type&quot; : &quot;atlassian-group-role-actor&quot;,
    &quot;name&quot; : &quot;jira-developers&quot;
  } ]
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the project and role exists and the user has permission to view it. Contains the role name,
      description, and project actors.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="setActors" name="PUT">
                    <ns2:doc>Updates a project role to contain the sent actors.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{ &quot;user&quot; : [&quot;admin&quot;] } or
{ &quot;group&quot; : [&quot;jira-developers&quot;] }</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the actor could not be added to the project role</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/project/MKY/role/10360&quot;,
  &quot;name&quot; : &quot;Developers&quot;,
  &quot;id&quot; : 10360,
  &quot;description&quot; : &quot;A project role that represents developers in a project&quot;,
  &quot;actors&quot; : [ {
    &quot;id&quot; : 10240,
    &quot;displayName&quot; : &quot;jira-developers&quot;,
    &quot;type&quot; : &quot;atlassian-group-role-actor&quot;,
    &quot;name&quot; : &quot;jira-developers&quot;
  } ]
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the project and role exists and the user has permission to view it. Contains the role name,
      description, and project actors.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="deleteActor" name="DELETE">
                    <ns2:doc>Remove actors from a project role.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user" style="query" type="xs:string">
                            <ns2:doc>the username to remove from the project role</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="group" style="query" type="xs:string">
                            <ns2:doc>the groupname to remove from the project role</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Returned if the actor was successfully removed from the project role.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the project or role is not found, the calling user does not have permission to view it, or does
      not have permission to modify the actors in the project role.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="getProjectRole" name="GET">
                    <ns2:doc>Details on a given project role.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the project or role is not found, or the calling user does not have permission to view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/project/MKY/role/10360&quot;,
  &quot;name&quot; : &quot;Developers&quot;,
  &quot;id&quot; : 10360,
  &quot;description&quot; : &quot;A project role that represents developers in a project&quot;,
  &quot;actors&quot; : [ {
    &quot;id&quot; : 10240,
    &quot;displayName&quot; : &quot;jira-developers&quot;,
    &quot;type&quot; : &quot;atlassian-group-role-actor&quot;,
    &quot;name&quot; : &quot;jira-developers&quot;
  } ]
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the project and role exists and the user has permission to view it. Contains the role name,
      description, and project actors.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="issuetype">
            <ns2:method id="getIssueAllTypes" name="GET">
                <ns2:doc>Returns a list of all issue types visible to the user</ns2:doc>
                <ns2:response>
                    <ns2:representation status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>[ {
  &quot;self&quot; : &quot;http://localhost:8090/jira/rest/api/2.0/issueType/3&quot;,
  &quot;id&quot; : &quot;3&quot;,
  &quot;description&quot; : &quot;A task that needs to be done.&quot;,
  &quot;iconUrl&quot; : &quot;http://localhost:8090/jira/images/icons/issuetypes/task.png&quot;,
  &quot;name&quot; : &quot;Task&quot;,
  &quot;subtask&quot; : false
}, {
  &quot;self&quot; : &quot;http://localhost:8090/jira/rest/api/2.0/issueType/1&quot;,
  &quot;id&quot; : &quot;1&quot;,
  &quot;description&quot; : &quot;A problem with the software.&quot;,
  &quot;iconUrl&quot; : &quot;http://localhost:8090/jira/images/icons/issuetypes/bug.png&quot;,
  &quot;name&quot; : &quot;Bug&quot;,
  &quot;subtask&quot; : false
} ]</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returned if the issue type exists and is visible by the calling user.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:resource path="{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string">
                    <ns2:doc>a String containing an issue type id</ns2:doc>
                </ns2:param>
                <ns2:method id="getIssueType" name="GET">
                    <ns2:doc>Returns a full representation of the issue type that has the given id.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the issue type does not exist, or is not visible to the calling user.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="issueType" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://localhost:8090/jira/rest/api/2.0/issueType/3&quot;,
  &quot;id&quot; : &quot;3&quot;,
  &quot;description&quot; : &quot;A task that needs to be done.&quot;,
  &quot;iconUrl&quot; : &quot;http://localhost:8090/jira/images/icons/issuetypes/task.png&quot;,
  &quot;name&quot; : &quot;Task&quot;,
  &quot;subtask&quot; : false
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the issue type exists and is visible by the calling user.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="workflow">
            <ns2:doc>REST resource for retrieving workflows.</ns2:doc>
            <ns2:method id="getAllWorkflows" name="GET">
                <ns2:doc>Returns all workflows.</ns2:doc>
                <ns2:request>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="workflowName" style="query" type="xs:string"/>
                </ns2:request>
                <ns2:response>
                    <ns2:representation status="200" mediaType="application/json">
                        <ns2:doc>Returned if the currently authenticated user has administration permission. Contains a
      full representation of every workflow.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="401">
                        <ns2:doc>Returned if the currently authenticated user does not have administration permission.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
        </ns2:resource>
        <ns2:resource path="issueLinkType">
            <ns2:doc>Rest resource to retrieve a list of issue link types.</ns2:doc>
            <ns2:method id="createIssueLinkType" name="POST">
                <ns2:doc>Create a new issue link type.</ns2:doc>
                <ns2:request>
                    <ns2:representation mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;name&quot; : &quot;Duplicate&quot;,
  &quot;inward&quot; : &quot;Duplicated by&quot;,
  &quot;outward&quot; : &quot;Duplicates&quot;
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                    </ns2:representation>
                </ns2:request>
                <ns2:response>
                    <ns2:representation status="404">
                        <ns2:doc>Issue linking is disabled or you do not have permission to create issue link types.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation element="issueLinkType" status="201" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;id&quot; : &quot;1000&quot;,
  &quot;name&quot; : &quot;Duplicate&quot;,
  &quot;inward&quot; : &quot;Duplicated by&quot;,
  &quot;outward&quot; : &quot;Duplicates&quot;,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2//issueLinkType/1000&quot;
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>The new issue link type has been created.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:method id="getIssueLinkTypes" name="GET">
                <ns2:doc>Returns a list of available issue link types, if issue linking is enabled.
 Each issue link type has an id, a name and a label for the outward and inward link relationship.</ns2:doc>
                <ns2:response>
                    <ns2:representation status="404">
                        <ns2:doc>Returned if issue linking is disabled.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation element="issueLinkTypes" status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;issueLinkTypes&quot; : [ {
    &quot;id&quot; : &quot;1000&quot;,
    &quot;name&quot; : &quot;Duplicate&quot;,
    &quot;inward&quot; : &quot;Duplicated by&quot;,
    &quot;outward&quot; : &quot;Duplicates&quot;,
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2//issueLinkType/1000&quot;
  }, {
    &quot;id&quot; : &quot;1010&quot;,
    &quot;name&quot; : &quot;Blocks&quot;,
    &quot;inward&quot; : &quot;Blocked by&quot;,
    &quot;outward&quot; : &quot;Blocks&quot;,
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2//issueLinkType/1010&quot;
  } ]
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returns a list of all available issue link types.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:resource path="/{issueLinkTypeId}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueLinkTypeId" style="template" type="xs:string"/>
                <ns2:method id="updateIssueLinkType" name="PUT">
                    <ns2:doc>Update the specified issue link type.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;name&quot; : &quot;Duplicate&quot;,
  &quot;inward&quot; : &quot;Duplicated by&quot;,
  &quot;outward&quot; : &quot;Duplicates&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if issue linking is disabled or no issue link type with the given id exists.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : &quot;1000&quot;,
  &quot;name&quot; : &quot;Duplicate&quot;,
  &quot;inward&quot; : &quot;Duplicated by&quot;,
  &quot;outward&quot; : &quot;Duplicates&quot;,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2//issueLinkType/1000&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if the supplied id is not a number.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="getIssueLinkType" name="GET">
                    <ns2:doc>Returns for a given issue link type id all information about this issue link type.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if issue linking is disabled or no issue link type with the given id exists.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="issueLinkType" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : &quot;1000&quot;,
  &quot;name&quot; : &quot;Duplicate&quot;,
  &quot;inward&quot; : &quot;Duplicated by&quot;,
  &quot;outward&quot; : &quot;Duplicates&quot;,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2//issueLinkType/1000&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns the issue link type with the given id.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="deleteIssueLinkType" name="DELETE">
                    <ns2:doc>Delete the specified issue link type.</ns2:doc>
                    <ns2:response>
                        <ns2:representation element="issueLinkType" status="204"/>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if issue linking is disabled or no issue link type with the given id exists.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="dashboard">
            <ns2:doc>The &lt;code&gt;/dashboard&lt;/code&gt; resource.</ns2:doc>
            <ns2:method id="list" name="GET">
                <ns2:doc>Returns a list of all dashboards, optionally filtering them.</ns2:doc>
                <ns2:request>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="filter" style="query" type="xs:string">
                        <ns2:doc>an optional filter that is applied to the list of dashboards. Valid values include
 &lt;code&gt;&quot;favourite&quot;&lt;/code&gt; for returning only favourite dashboards, and &lt;code&gt;&quot;my&quot;&lt;/code&gt; for returning
 dashboards that are owned by the calling user.</ns2:doc>
                    </ns2:param>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="startAt" style="query" type="xs:int">
                        <ns2:doc>the index of the first dashboard to return (0-based). must be 0 or a multiple of
 &lt;code&gt;maxResults&lt;/code&gt;</ns2:doc>
                    </ns2:param>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="maxResults" style="query" type="xs:int">
                        <ns2:doc>a hint as to the the maximum number of dashboards to return in each call. Note that the
 JIRA server reserves the right to impose a &lt;code&gt;maxResults&lt;/code&gt; limit that is lower than the value that a
 client provides, dues to lack or resources or any other condition. When this happens, your results will be
 truncated. Callers should always check the returned &lt;code&gt;maxResults&lt;/code&gt; to determine the value that is
 effectively being used.</ns2:doc>
                    </ns2:param>
                </ns2:request>
                <ns2:response>
                    <ns2:representation status="200">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;startAt&quot; : 10,
  &quot;maxResults&quot; : 10,
  &quot;total&quot; : 143,
  &quot;prev&quot; : &quot;http://www.example.com/jira/rest/api/2/dashboard?startAt=0&quot;,
  &quot;next&quot; : &quot;http://www.example.com/jira/rest/api/2/dashboard?startAt=10&quot;,
  &quot;dashboards&quot; : [ {
    &quot;id&quot; : &quot;10000&quot;,
    &quot;name&quot; : &quot;System Dashboard&quot;,
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/dashboard/10000&quot;,
    &quot;view&quot; : &quot;http://www.example.com/jira/secure/Dashboard.jspa?selectPageId=10000&quot;
  }, {
    &quot;id&quot; : &quot;20000&quot;,
    &quot;name&quot; : &quot;Build Engineering&quot;,
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/dashboard/20000&quot;,
    &quot;view&quot; : &quot;http://www.example.com/jira/secure/Dashboard.jspa?selectPageId=20000&quot;
  } ]
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returns a list of dashboards.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:resource path="{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string">
                    <ns2:doc>the dashboard id</ns2:doc>
                </ns2:param>
                <ns2:method id="getDashboard" name="GET">
                    <ns2:doc>Returns a single dashboard.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if there is no dashboard with the specified id, or if the user does not have permission to see it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : &quot;10000&quot;,
  &quot;name&quot; : &quot;System Dashboard&quot;,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/dashboard/10000&quot;,
  &quot;view&quot; : &quot;http://www.example.com/jira/secure/Dashboard.jspa?selectPageId=10000&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a single dashboard.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="groupuserpicker">
            <ns2:method id="findUsersAndGroups" name="GET">
                <ns2:doc>Returns a list of users and groups matching query with highlighting. This resource cannot be accessed
 anonymously.</ns2:doc>
                <ns2:request>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="query" style="query" type="xs:string">
                        <ns2:doc>A string used to search username, Name or e-mail address</ns2:doc>
                    </ns2:param>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="maxResults" style="query" type="xs:int">
                        <ns2:doc>the maximum number of users to return (defaults to 50). The maximum allowed value is 1000. If
 you specify a value that is higher than this number, your search results will be truncated.</ns2:doc>
                    </ns2:param>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="showAvatar" style="query" type="xs:boolean"/>
                </ns2:request>
                <ns2:response>
                    <ns2:doc>An object containing list of matched user objects, with html representing highlighting.</ns2:doc>
                    <ns2:representation mediaType="application/json"/>
                </ns2:response>
            </ns2:method>
        </ns2:resource>
        <ns2:resource path="jql/autocompletedata">
            <ns2:doc>Resource for auto complete data for searches.</ns2:doc>
            <ns2:method id="getAutoComplete" name="GET">
                <ns2:doc>Returns the auto complete data required for JQL searches.</ns2:doc>
                <ns2:response>
                    <ns2:representation status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>&quot;{\&quot;visibleFieldNames\&quot;: [{\&quot;value\&quot;:\&quot;affectedVersion\&quot;,\&quot;displayName\&quot;:\&quot;affectedVersion\&quot;,\&quot;auto\&quot;:\&quot;true\&quot;,\&quot;orderable\&quot;:\&quot;true\&quot;,\&quot;searchable\&quot;:\&quot;true\&quot;,\&quot;operators\&quot;:[\&quot;=\&quot;,\&quot;!=\&quot;,\&quot;in\&quot;,\&quot;not in\&quot;,\&quot;is\&quot;,\&quot;is not\&quot;,\&quot;&lt;\&quot;,\&quot;&lt;=\&quot;,\&quot;&gt;\&quot;,\&quot;&gt;=\&quot;],\&quot;types\&quot;:[\&quot;com.atlassian.jira.project.version.Version\&quot;]},{\&quot;value\&quot;:\&quot;assignee\&quot;,\&quot;displayName\&quot;:\&quot;assignee\&quot;,\&quot;auto\&quot;:\&quot;true\&quot;,\&quot;orderable\&quot;:\&quot;true\&quot;,\&quot;searchable\&quot;:\&quot;true\&quot;,\&quot;operators\&quot;:[\&quot;!=\&quot;,\&quot;was not in\&quot;,\&quot;not in\&quot;,\&quot;was not\&quot;,\&quot;is\&quot;,\&quot;was in\&quot;,\&quot;was\&quot;,\&quot;=\&quot;,\&quot;in\&quot;,\&quot;changed\&quot;,\&quot;is not\&quot;],\&quot;types\&quot;:[\&quot;com.atlassian.crowd.embedded.api.User\&quot;]}],\&quot;visibleFunctionNames\&quot;: {\&quot;value\&quot;:\&quot;currentLogin()\&quot;,\&quot;displayName\&quot;:\&quot;currentLogin()\&quot;,\&quot;types\&quot;:[\&quot;java.util.Date\&quot;]},{\&quot;value\&quot;:\&quot;currentUser()\&quot;,\&quot;displayName\&quot;:\&quot;currentUser()\&quot;,\&quot;types\&quot;:[\&quot;com.atlassian.crowd.embedded.api.User\&quot;]}],\&quot;jqlReservedWords\&quot;: \&quot;empty\&quot;,\&quot;and\&quot;,\&quot;or\&quot;,\&quot;in\&quot;,\&quot;distinct\&quot;]}&quot;</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>The auto complete data required for JQL searches.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="401">
                        <ns2:doc>Returned if the calling user is not authenticated.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="500">
                        <ns2:doc>Returned if an error occurs while generating the response.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
        </ns2:resource>
        <ns2:resource path="project">
            <ns2:method id="getAllProjects" name="GET">
                <ns2:doc>Returns all projects which are visible for the currently logged in user. If no user is logged in, it returns the
 list of projects that are visible when using anonymous access.</ns2:doc>
                <ns2:response>
                    <ns2:representation element="projects" status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>[ {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/project/EX&quot;,
  &quot;id&quot; : &quot;10000&quot;,
  &quot;key&quot; : &quot;EX&quot;,
  &quot;name&quot; : &quot;Example&quot;,
  &quot;avatarUrls&quot; : {
    &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=small&amp;pid=10000&quot;,
    &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=xsmall&amp;pid=10000&quot;,
    &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=medium&amp;pid=10000&quot;,
    &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=large&amp;pid=10000&quot;
  }
}, {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/project/ABC&quot;,
  &quot;id&quot; : &quot;10001&quot;,
  &quot;key&quot; : &quot;ABC&quot;,
  &quot;name&quot; : &quot;Alphabetical&quot;,
  &quot;avatarUrls&quot; : {
    &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=small&amp;pid=10001&quot;,
    &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=xsmall&amp;pid=10001&quot;,
    &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=medium&amp;pid=10001&quot;,
    &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=large&amp;pid=10001&quot;
  }
} ]</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returns a list of projects for which the user has the BROWSE, ADMINISTER or PROJECT_ADMIN project permission.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="500">
                        <ns2:doc>Returned if an error occurs while retrieving the list of projects.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:resource path="{key}/avatar/temporary">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="key" style="template" type="xs:string">
                    <ns2:doc>Project key</ns2:doc>
                </ns2:param>
                <ns2:method id="storeTemporaryAvatar" name="POST">
                    <ns2:doc>Creates temporary avatar</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="filename" style="query" type="xs:string">
                            <ns2:doc>name of file being uploaded</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="size" style="query" type="xs:long">
                            <ns2:doc>size of file</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the currently authenticated user does not have EDIT PROJECT permission.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="avatar" status="201" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;cropperWidth&quot; : 120,
  &quot;cropperOffsetX&quot; : 50,
  &quot;cropperOffsetY&quot; : 50,
  &quot;url&quot; : &quot;http://example.com/jira/secure/temporaryavatar?cropped=true&quot;,
  &quot;needsCropping&quot; : true
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>temporary avatar cropping instructions</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Valiation failed. For example filesize is beyond max attachment size.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the request does not conain a valid XSRF token</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="500">
                            <ns2:doc>Returned if an error occurs while converting temporary avatar to real avatar</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="storeTemporaryAvatarUsingMultiPart" name="POST">
                    <ns2:doc>Creates temporary avatar using multipart. The response is sent back as JSON stored in a textarea. This is because
 the client uses remote iframing to submit avatars using multipart. So we must send them a valid HTML page back from
 which the client parses the JSON.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the currently authenticated user does not have EDIT PROJECT permission.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="avatar" status="201" mediaType="text/html">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;cropperWidth&quot; : 120,
  &quot;cropperOffsetX&quot; : 50,
  &quot;cropperOffsetY&quot; : 50,
  &quot;url&quot; : &quot;http://example.com/jira/secure/temporaryavatar?cropped=true&quot;,
  &quot;needsCropping&quot; : true
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>temporary avatar cropping instructions embeded in HTML page. Error messages will also be embeded in the page.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="500">
                            <ns2:doc>Returned if an error occurs while converting temporary avatar to real avatar</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{key}/avatar">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="key" style="template" type="xs:string"/>
                <ns2:method id="createAvatarFromTemporary" name="POST">
                    <ns2:doc>Converts temporary avatar into a real avatar</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;cropperWidth&quot; : 120,
  &quot;cropperOffsetX&quot; : 50,
  &quot;cropperOffsetY&quot; : 50,
  &quot;needsCropping&quot; : false
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the currently authenticated user does not have EDIT PROJECT permission.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="avatar" status="201" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : &quot;1000&quot;,
  &quot;owner&quot; : &quot;fred&quot;,
  &quot;isSystemAvatar&quot; : true,
  &quot;isSelected&quot; : true,
  &quot;selected&quot; : true
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns created avatar</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if the cropping coordinates are invalid</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the currently authenticated user does not have permission to pick avatar</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="500">
                            <ns2:doc>Returned if an error occurs while converting temporary avatar to real avatar</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="updateProjectAvatar" name="PUT">
                    <ns2:request>
                        <ns2:representation mediaType="application/json"/>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation mediaType="application/json"/>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{key}/avatars">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="key" style="template" type="xs:string">
                    <ns2:doc>project key</ns2:doc>
                </ns2:param>
                <ns2:method id="getAllAvatars" name="GET">
                    <ns2:doc>Returns all avatars which are visible for the currently logged in user.  The avatars are grouped into
 system and custom.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the currently authenticated user does not have VIEW PROJECT permission.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="avatars" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;system&quot; : [ {
    &quot;id&quot; : &quot;1000&quot;,
    &quot;owner&quot; : &quot;fred&quot;,
    &quot;isSystemAvatar&quot; : true,
    &quot;isSelected&quot; : true,
    &quot;selected&quot; : true
  } ],
  &quot;custom&quot; : [ {
    &quot;id&quot; : &quot;1010&quot;,
    &quot;owner&quot; : &quot;andrew&quot;,
    &quot;isSystemAvatar&quot; : false,
    &quot;isSelected&quot; : false,
    &quot;selected&quot; : false
  } ]
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a map containing a list of avatars for both custom an system avatars, which the user has the BROWSE project permission.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="500">
                            <ns2:doc>Returned if an error occurs while retrieving the list of avatars.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{key}/avatar/{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:long">
                    <ns2:doc>database id for avatar</ns2:doc>
                </ns2:param>
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="key" style="template" type="xs:string">
                    <ns2:doc>Project key</ns2:doc>
                </ns2:param>
                <ns2:method id="deleteAvatar" name="DELETE">
                    <ns2:doc>Deletes avatar</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="204" mediaType="application/json">
                            <ns2:doc>Returned if the avatar is successfully deleted.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the avatar does not exist or the currently authenticated user does not have permission to
      delete it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the currently authenticated user does not have permission to delete the component.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{key}/versions">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="key" style="template" type="xs:string">
                    <ns2:doc>the project key</ns2:doc>
                </ns2:param>
                <ns2:method id="getProjectVersions" name="GET">
                    <ns2:doc>Contains a full representation of a the specified project's versions.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="expand" style="query" type="xs:string"/>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the project is not found, or the calling user does not have permission to view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="versions" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>[ {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/version/10000&quot;,
  &quot;id&quot; : &quot;10000&quot;,
  &quot;description&quot; : &quot;An excellent version&quot;,
  &quot;name&quot; : &quot;New Version 1&quot;,
  &quot;archived&quot; : false,
  &quot;released&quot; : true,
  &quot;releaseDate&quot; : &quot;2010-07-05&quot;,
  &quot;overdue&quot; : true,
  &quot;userReleaseDate&quot; : &quot;5/Jul/2010&quot;
}, {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/version/10010&quot;,
  &quot;id&quot; : &quot;10010&quot;,
  &quot;description&quot; : &quot;Minor Bugfix version&quot;,
  &quot;name&quot; : &quot;Next Version&quot;,
  &quot;archived&quot; : false,
  &quot;released&quot; : false,
  &quot;overdue&quot; : false
} ]</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the project exists and the user has permission to view its versions. Contains a full
      representation of the project's versions in JSON format.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{key}/components">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="key" style="template" type="xs:string">
                    <ns2:doc>the project key</ns2:doc>
                </ns2:param>
                <ns2:method id="getProjectComponents" name="GET">
                    <ns2:doc>Contains a full representation of a the specified project's components.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the project is not found, or the calling user does not have permission to view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="components" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>[ {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/component/10000&quot;,
  &quot;id&quot; : &quot;10000&quot;,
  &quot;name&quot; : &quot;Component 1&quot;,
  &quot;description&quot; : &quot;This is a JIRA component&quot;,
  &quot;lead&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;assigneeType&quot; : &quot;PROJECT_LEAD&quot;,
  &quot;assignee&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;realAssigneeType&quot; : &quot;PROJECT_LEAD&quot;,
  &quot;realAssignee&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;isAssigneeTypeValid&quot; : false
}, {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/component/10000&quot;,
  &quot;id&quot; : &quot;10050&quot;,
  &quot;name&quot; : &quot;PXA&quot;,
  &quot;description&quot; : &quot;This is a another JIRA component&quot;,
  &quot;lead&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;assigneeType&quot; : &quot;PROJECT_LEAD&quot;,
  &quot;assignee&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;realAssigneeType&quot; : &quot;PROJECT_LEAD&quot;,
  &quot;realAssignee&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;isAssigneeTypeValid&quot; : false
} ]</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the project exists and the user has permission to view its components. Contains a full
      representation of the project's components in JSON format.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{key}/statuses">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="key" style="template" type="xs:string">
                    <ns2:doc>Project key</ns2:doc>
                </ns2:param>
                <ns2:method id="getAllStatuses" name="GET">
                    <ns2:doc>Get all issue types with valid status values for a project</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>[ {
  &quot;self&quot; : &quot;http://localhost:8090/jira/rest/api/2.0/issueType/3&quot;,
  &quot;id&quot; : &quot;3&quot;,
  &quot;name&quot; : &quot;Task&quot;,
  &quot;subtask&quot; : false,
  &quot;statuses&quot; : [ {
    &quot;self&quot; : &quot;http://localhost:8090/jira/rest/api/2.0/status/10000&quot;,
    &quot;description&quot; : &quot;The issue is currently being worked on.&quot;,
    &quot;iconUrl&quot; : &quot;http://localhost:8090/jira/images/icons/progress.gif&quot;,
    &quot;name&quot; : &quot;In Progress&quot;,
    &quot;id&quot; : &quot;10000&quot;
  }, {
    &quot;self&quot; : &quot;http://localhost:8090/jira/rest/api/2.0/status/5&quot;,
    &quot;description&quot; : &quot;The issue is closed.&quot;,
    &quot;iconUrl&quot; : &quot;http://localhost:8090/jira/images/icons/closed.gif&quot;,
    &quot;name&quot; : &quot;Closed&quot;,
    &quot;id&quot; : &quot;5&quot;
  } ]
} ]</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the project exists and the user has permission to view its components. Contains a full
      representation of issue types with status values which are valid for each issue type.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if the project is not found, or the calling user does not have permission to view it.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{key}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="key" style="template" type="xs:string">
                    <ns2:doc>the project key</ns2:doc>
                </ns2:param>
                <ns2:method id="getProject" name="GET">
                    <ns2:doc>Contains a full representation of a project in JSON format.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the project is not found, or the calling user does not have permission to view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="project" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/project/EX&quot;,
  &quot;id&quot; : &quot;10000&quot;,
  &quot;key&quot; : &quot;EX&quot;,
  &quot;description&quot; : &quot;This project was created as an example for REST.&quot;,
  &quot;lead&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;components&quot; : [ {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/component/10000&quot;,
    &quot;id&quot; : &quot;10000&quot;,
    &quot;name&quot; : &quot;Component 1&quot;,
    &quot;description&quot; : &quot;This is a JIRA component&quot;,
    &quot;lead&quot; : {
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
      &quot;name&quot; : &quot;fred&quot;,
      &quot;avatarUrls&quot; : {
        &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
        &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
        &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
        &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
      },
      &quot;displayName&quot; : &quot;Fred F. User&quot;,
      &quot;active&quot; : false
    },
    &quot;assigneeType&quot; : &quot;PROJECT_LEAD&quot;,
    &quot;assignee&quot; : {
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
      &quot;name&quot; : &quot;fred&quot;,
      &quot;avatarUrls&quot; : {
        &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
        &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
        &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
        &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
      },
      &quot;displayName&quot; : &quot;Fred F. User&quot;,
      &quot;active&quot; : false
    },
    &quot;realAssigneeType&quot; : &quot;PROJECT_LEAD&quot;,
    &quot;realAssignee&quot; : {
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
      &quot;name&quot; : &quot;fred&quot;,
      &quot;avatarUrls&quot; : {
        &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
        &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
        &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
        &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
      },
      &quot;displayName&quot; : &quot;Fred F. User&quot;,
      &quot;active&quot; : false
    },
    &quot;isAssigneeTypeValid&quot; : false
  } ],
  &quot;issueTypes&quot; : [ {
    &quot;self&quot; : &quot;http://localhost:8090/jira/rest/api/2.0/issueType/3&quot;,
    &quot;id&quot; : &quot;3&quot;,
    &quot;description&quot; : &quot;A task that needs to be done.&quot;,
    &quot;iconUrl&quot; : &quot;http://localhost:8090/jira/images/icons/issuetypes/task.png&quot;,
    &quot;name&quot; : &quot;Task&quot;,
    &quot;subtask&quot; : false
  }, {
    &quot;self&quot; : &quot;http://localhost:8090/jira/rest/api/2.0/issueType/1&quot;,
    &quot;id&quot; : &quot;1&quot;,
    &quot;description&quot; : &quot;A problem with the software.&quot;,
    &quot;iconUrl&quot; : &quot;http://localhost:8090/jira/images/icons/issuetypes/bug.png&quot;,
    &quot;name&quot; : &quot;Bug&quot;,
    &quot;subtask&quot; : false
  } ],
  &quot;url&quot; : &quot;http://www.example.com/jira/browse/EX&quot;,
  &quot;email&quot; : &quot;from-jira@example.com&quot;,
  &quot;assigneeType&quot; : &quot;PROJECT_LEAD&quot;,
  &quot;versions&quot; : [ ],
  &quot;name&quot; : &quot;Example&quot;,
  &quot;roles&quot; : {
    &quot;Developers&quot; : &quot;http://www.example.com/jira/rest/api/2/project/EX/role/10000&quot;
  },
  &quot;avatarUrls&quot; : {
    &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=small&amp;pid=10000&quot;,
    &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=xsmall&amp;pid=10000&quot;,
    &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=medium&amp;pid=10000&quot;,
    &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=large&amp;pid=10000&quot;
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the project exists and the user has permission to view it. Contains a full representation
      of a project in JSON format.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="securitylevel">
            <ns2:resource path="{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string">
                    <ns2:doc>a String containing an issue security level id</ns2:doc>
                </ns2:param>
                <ns2:method id="getIssuesecuritylevel" name="GET">
                    <ns2:doc>Returns a full representation of the security level that has the given id.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the issue type does not exist, or is not visible to the calling user.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="issuesecuritylevel" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://localhost:8090/jira/rest/api/2/securitylevel/10021&quot;,
  &quot;id&quot; : &quot;10000&quot;,
  &quot;description&quot; : &quot;Only the reporter and internal staff can see this issue.&quot;,
  &quot;name&quot; : &quot;Reporter Only&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the issue type exists and is visible by the calling user.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="status">
            <ns2:method id="getStatuses" name="GET">
                <ns2:doc>Returns a list of all statuses</ns2:doc>
                <ns2:response>
                    <ns2:representation status="404">
                        <ns2:doc>Returned if the requested issue status is not found, or the user does not have permission to view it.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation element="statuses" status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>[ {
  &quot;self&quot; : &quot;http://localhost:8090/jira/rest/api/2.0/status/10000&quot;,
  &quot;description&quot; : &quot;The issue is currently being worked on.&quot;,
  &quot;iconUrl&quot; : &quot;http://localhost:8090/jira/images/icons/progress.gif&quot;,
  &quot;name&quot; : &quot;In Progress&quot;,
  &quot;id&quot; : &quot;10000&quot;
}, {
  &quot;self&quot; : &quot;http://localhost:8090/jira/rest/api/2.0/status/5&quot;,
  &quot;description&quot; : &quot;The issue is closed.&quot;,
  &quot;iconUrl&quot; : &quot;http://localhost:8090/jira/images/icons/closed.gif&quot;,
  &quot;name&quot; : &quot;Closed&quot;,
  &quot;id&quot; : &quot;5&quot;
} ]</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returns a list of all JIRA issue statuses in JSON format, that are visible to the user.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:resource path="{idOrName}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="idOrName" style="template" type="xs:string">
                    <ns2:doc>a numeric Status id or a status name</ns2:doc>
                </ns2:param>
                <ns2:method id="getStatus" name="GET">
                    <ns2:doc>Returns a full representation of the Status having the given id or name.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested issue status is not found, or the user does not have permission to view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="status" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://localhost:8090/jira/rest/api/2.0/status/10000&quot;,
  &quot;description&quot; : &quot;The issue is currently being worked on.&quot;,
  &quot;iconUrl&quot; : &quot;http://localhost:8090/jira/images/icons/progress.gif&quot;,
  &quot;name&quot; : &quot;In Progress&quot;,
  &quot;id&quot; : &quot;10000&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a full representation of a JIRA issue status in JSON format.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="version">
            <ns2:method id="createVersion" name="POST">
                <ns2:doc>Create a version via POST.</ns2:doc>
                <ns2:request>
                    <ns2:representation mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;description&quot; : &quot;An excellent version&quot;,
  &quot;name&quot; : &quot;New Version 1&quot;,
  &quot;archived&quot; : false,
  &quot;released&quot; : true,
  &quot;releaseDate&quot; : &quot;2010-07-05&quot;,
  &quot;userReleaseDate&quot; : &quot;5/Jul/2010&quot;,
  &quot;project&quot; : &quot;PXA&quot;
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                    </ns2:representation>
                </ns2:request>
                <ns2:response>
                    <ns2:representation status="404">
                        <ns2:doc>Returned if the version does not exist or the currently authenticated user does not have permission to
      view it.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="201" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;description&quot; : &quot;An excellent version&quot;,
  &quot;name&quot; : &quot;New Version 1&quot;,
  &quot;archived&quot; : false,
  &quot;released&quot; : true,
  &quot;releaseDate&quot; : &quot;2010-07-05&quot;,
  &quot;userReleaseDate&quot; : &quot;5/Jul/2010&quot;,
  &quot;project&quot; : &quot;PXA&quot;
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returned if the version is created successfully.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="403">
                        <ns2:doc>Returned if the currently authenticated user does not have permission to edit the version.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:resource path="{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string"/>
                <ns2:method id="delete" name="DELETE">
                    <ns2:doc>Delete a project version.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="moveFixIssuesTo" style="query" type="xs:string">
                            <ns2:doc>The version to set fixVersion to on issues where the deleted version is the fix version,
 If null then the fixVersion is removed.</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="moveAffectedIssuesTo" style="query" type="xs:string">
                            <ns2:doc>The version to set affectedVersion to on issues where the deleted version is the affected version,
 If null then the affectedVersion is removed.</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Returned if the version is successfully deleted.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the version does not exist or the currently authenticated user does not have permission to
      view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the currently authenticated user does not have permission to delete the version.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="getVersion" name="GET">
                    <ns2:doc>Returns a project version.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="expand" style="query" type="xs:string"/>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the version does not exist or the currently authenticated user does not have permission to
      view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="project" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/version/10000&quot;,
  &quot;id&quot; : &quot;10000&quot;,
  &quot;description&quot; : &quot;An excellent version&quot;,
  &quot;name&quot; : &quot;New Version 1&quot;,
  &quot;archived&quot; : false,
  &quot;released&quot; : true,
  &quot;releaseDate&quot; : &quot;2010-07-05&quot;,
  &quot;overdue&quot; : true,
  &quot;userReleaseDate&quot; : &quot;5/Jul/2010&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the version exists and the currently authenticated user has permission to view it. Contains a
      full representation of the version.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="updateVersion" name="PUT">
                    <ns2:doc>Modify a version via PUT. Any fields present in the PUT will override existing values. As a convenience, if a field
 is not present, it is silently ignored.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/version/10000&quot;,
  &quot;id&quot; : &quot;10000&quot;,
  &quot;description&quot; : &quot;An excellent version&quot;,
  &quot;name&quot; : &quot;New Version 1&quot;,
  &quot;archived&quot; : false,
  &quot;released&quot; : true,
  &quot;releaseDate&quot; : &quot;2010-07-05&quot;,
  &quot;overdue&quot; : true,
  &quot;userReleaseDate&quot; : &quot;5/Jul/2010&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the version does not exist or the currently authenticated user does not have permission to
      view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>Returned if the version exists and the currently authenticated user has permission to edit it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the currently authenticated user does not have permission to edit the version.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{id}/relatedIssueCounts">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string">
                    <ns2:doc>a String containing the version id</ns2:doc>
                </ns2:param>
                <ns2:method id="getVersionRelatedIssues" name="GET">
                    <ns2:doc>Returns a bean containing the number of fixed in and affected issues for the given version.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the version does not exist or the currently authenticated user does not have permission to
      view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="issue Count Bean" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/version/10000&quot;,
  &quot;issuesFixedCount&quot; : 23,
  &quot;issuesAffectedCount&quot; : 101
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the version exists and the currently authenticated user has permission to view it. Contains
      counts of issues fixed in and affecting this version.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{id}/unresolvedIssueCount">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string">
                    <ns2:doc>a String containing the version id</ns2:doc>
                </ns2:param>
                <ns2:method id="getVersionUnresolvedIssues" name="GET">
                    <ns2:doc>Returns the number of unresolved issues for the given version</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the version does not exist or the currently authenticated user does not have permission to
      view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="issuesUnresolvedCount" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/version/10000&quot;,
  &quot;issuesUnresolvedCount&quot; : 23
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the version exists and the currently authenticated user has permission to view it. Contains
      counts of issues unresolved in this version.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="/{id}/move">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string">
                    <ns2:doc>a String containing the version id</ns2:doc>
                </ns2:param>
                <ns2:method id="moveVersion" name="POST">
                    <ns2:doc>Modify a version's sequence within a project.

 The move version bean has 2 alternative field value pairs:
 &lt;dl&gt;
     &lt;dt&gt;position&lt;/dt&gt;&lt;dd&gt;An absolute position, which may have a value of 'First', 'Last', 'Earlier' or 'Later'&lt;/dd&gt;
     &lt;dt&gt;after&lt;/dt&gt;&lt;dd&gt;A version to place this version after.  The value should be the self link of another version&lt;/dd&gt;
 &lt;/dl&gt;</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;after&quot; : &quot;http://www.example.com/jira/rest/api/2/version/10000&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the version, or target of the version to move after does not exist or the currently authenticated
      user does not have permission to view it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="project version" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/version/10000&quot;,
  &quot;id&quot; : &quot;10000&quot;,
  &quot;description&quot; : &quot;An excellent version&quot;,
  &quot;name&quot; : &quot;New Version 1&quot;,
  &quot;archived&quot; : false,
  &quot;released&quot; : true,
  &quot;releaseDate&quot; : &quot;2010-07-05&quot;,
  &quot;overdue&quot; : true,
  &quot;userReleaseDate&quot; : &quot;5/Jul/2010&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the version exists and the currently authenticated user has permission to view it. Contains a
      full representation of the version moved.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="user">
            <ns2:method id="getUser" name="GET">
                <ns2:doc>Returns a user. This resource cannot be accessed anonymously.</ns2:doc>
                <ns2:request>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="username" style="query" type="xs:string">
                        <ns2:doc>the username</ns2:doc>
                    </ns2:param>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="key" style="query" type="xs:string"/>
                </ns2:request>
                <ns2:response>
                    <ns2:representation status="404">
                        <ns2:doc>Returned if the requested user is not found.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation element="user" status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
  &quot;name&quot; : &quot;fred&quot;,
  &quot;emailAddress&quot; : &quot;fred@example.com&quot;,
  &quot;avatarUrls&quot; : {
    &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
    &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
    &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
    &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
  },
  &quot;displayName&quot; : &quot;Fred F. User&quot;,
  &quot;active&quot; : true,
  &quot;timeZone&quot; : &quot;Australia/Sydney&quot;,
  &quot;groups&quot; : {
    &quot;size&quot; : 3,
    &quot;items&quot; : [ {
      &quot;name&quot; : &quot;jira-user&quot;,
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/group?groupname=jira-user&quot;
    }, {
      &quot;name&quot; : &quot;jira-admin&quot;,
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/group?groupname=jira-admin&quot;
    }, {
      &quot;name&quot; : &quot;important&quot;,
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/group?groupname=important&quot;
    } ]
  },
  &quot;expand&quot; : &quot;groups&quot;
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returns a full representation of a JIRA user in JSON format.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="401">
                        <ns2:doc>Returned if the current user is not authenticated.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:resource path="avatar/temporary">
                <ns2:method id="storeTemporaryAvatar" name="POST">
                    <ns2:doc>Creates temporary avatar. Creating a temporary avatar is part of a 3-step process in uploading a new
 avatar for a user: upload, crop, confirm.

 &lt;p&gt;
     The following examples shows these three steps using curl.
     The cookies (session) need to be preserved between requests, hence the use of -b and -c.
     The id created in step 2 needs to be passed to step 3
     (you can simply pass the whole response of step 2 as the request of step 3).
 &lt;/p&gt;

 &lt;pre&gt;
 curl -c cookiejar.txt -X POST -u admin:admin -H &quot;X-Atlassian-Token: no-check&quot; \
   -H &quot;Content-Type: image/png&quot; --data-binary @mynewavatar.png \
   'http://localhost:8090/jira/rest/api/2/user/avatar/temporary?username=admin&amp;amp;filename=mynewavatar.png'

 curl -b cookiejar.txt -X POST -u admin:admin -H &quot;X-Atlassian-Token: no-check&quot; \
   -H &quot;Content-Type: application/json&quot; --data '{&quot;cropperWidth&quot;: &quot;65&quot;,&quot;cropperOffsetX&quot;: &quot;10&quot;,&quot;cropperOffsetY&quot;: &quot;16&quot;}' \
   -o tmpid.json \
   http://localhost:8090/jira/rest/api/2/user/avatar?username=admin

 curl -b cookiejar.txt -X PUT -u admin:admin -H &quot;X-Atlassian-Token: no-check&quot; \
   -H &quot;Content-Type: application/json&quot; --data-binary @tmpid.json \
   http://localhost:8090/jira/rest/api/2/user/avatar?username=admin
 &lt;/pre&gt;</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="username" style="query" type="xs:string">
                            <ns2:doc>username</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="filename" style="query" type="xs:string">
                            <ns2:doc>name of file being uploaded</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="size" style="query" type="xs:long">
                            <ns2:doc>size of file</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the currently authenticated user does not have EDIT PROJECT permission.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="avatar" status="201" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;cropperWidth&quot; : 120,
  &quot;cropperOffsetX&quot; : 50,
  &quot;cropperOffsetY&quot; : 50,
  &quot;url&quot; : &quot;http://example.com/jira/secure/temporaryavatar?cropped=true&quot;,
  &quot;needsCropping&quot; : true
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>temporary avatar cropping instructions</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the request does not conain a valid XSRF token</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="500">
                            <ns2:doc>Returned if an error occurs while converting temporary avatar to real avatar</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="storeTemporaryAvatarUsingMultiPart" name="POST">
                    <ns2:doc>Creates temporary avatar using multipart. The response is sent back as JSON stored in a textarea. This is because
 the client uses remote iframing to submit avatars using multipart. So we must send them a valid HTML page back from
 which the client parses the JSON from.

 &lt;p&gt;
 Creating a temporary avatar is part of a 3-step process in uploading a new
 avatar for a user: upload, crop, confirm. This endpoint allows you to use a multipart upload
 instead of sending the image directly as the request body.
 &lt;/p&gt;

 &lt;p&gt;You *must* use &quot;avatar&quot; as the name of the upload parameter:&lt;/p&gt;

 &lt;pre&gt;
 curl -c cookiejar.txt -X POST -u admin:admin -H &quot;X-Atlassian-Token: no-check&quot; \
   -F &quot;avatar=@mynewavatar.png;type=image/png&quot; \
   'http://localhost:8090/jira/rest/api/2/user/avatar/temporary?username=admin'
 &lt;/pre&gt;</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="username" style="query" type="xs:string">
                            <ns2:doc>Username</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if user does NOT exist</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="avatar" status="201" mediaType="text/html">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;cropperWidth&quot; : 120,
  &quot;cropperOffsetX&quot; : 50,
  &quot;cropperOffsetY&quot; : 50,
  &quot;url&quot; : &quot;http://example.com/jira/secure/temporaryavatar?cropped=true&quot;,
  &quot;needsCropping&quot; : true
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>temporary avatar cropping instructions embeded in HTML page. Error messages will also be embeded in the page.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="500">
                            <ns2:doc>Returned if an error occurs while converting temporary avatar to real avatar</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="avatar">
                <ns2:method id="createAvatarFromTemporary" name="POST">
                    <ns2:doc>Converts temporary avatar into a real avatar</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="username" style="query" type="xs:string">
                            <ns2:doc>username</ns2:doc>
                        </ns2:param>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;cropperWidth&quot; : 120,
  &quot;cropperOffsetX&quot; : 50,
  &quot;cropperOffsetY&quot; : 50,
  &quot;needsCropping&quot; : false
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the currently authenticated user does not have EDIT PROJECT permission.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="avatar" status="201" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : &quot;1000&quot;,
  &quot;owner&quot; : &quot;fred&quot;,
  &quot;isSystemAvatar&quot; : true,
  &quot;isSelected&quot; : true,
  &quot;selected&quot; : true
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns created avatar</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if the cropping coordinates are invalid</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the currently authenticated user does not have permission to pick avatar</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="500">
                            <ns2:doc>Returned if an error occurs while converting temporary avatar to real avatar</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="updateProjectAvatar" name="PUT">
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="username" style="query" type="xs:string"/>
                        <ns2:representation mediaType="application/json"/>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation mediaType="application/json"/>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="assignable/multiProjectSearch">
                <ns2:method id="findBulkAssignableUsers" name="GET">
                    <ns2:doc>Returns a list of users that match the search string and can be assigned issues for all the given projects.
 This resource cannot be accessed anonymously.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="username" style="query" type="xs:string">
                            <ns2:doc>the username</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="projectKeys" style="query" type="xs:string">
                            <ns2:doc>the keys of the projects we are finding assignable users for, comma-separated</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="startAt" style="query" type="xs:int">
                            <ns2:doc>the index of the first user to return (0-based)</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="maxResults" style="query" type="xs:int">
                            <ns2:doc>the maximum number of users to return (defaults to 50). The maximum allowed value is 1000.
 If you specify a value that is higher than this number, your search results will be truncated.</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested user is not found.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="user" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>[ {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
  &quot;name&quot; : &quot;fred&quot;,
  &quot;avatarUrls&quot; : {
    &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
    &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
    &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
    &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
  },
  &quot;displayName&quot; : &quot;Fred F. User&quot;,
  &quot;active&quot; : false
}, {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=andrew&quot;,
  &quot;name&quot; : &quot;andrew&quot;,
  &quot;avatarUrls&quot; : {
    &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=andrew&quot;,
    &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=andrew&quot;,
    &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=andrew&quot;,
    &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=andrew&quot;
  },
  &quot;displayName&quot; : &quot;Andrew Anderson&quot;,
  &quot;active&quot; : false
} ]</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a full representation of a JIRA user in JSON format.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if the current user is not authenticated.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="avatars">
                <ns2:method id="getAllAvatars" name="GET">
                    <ns2:doc>Returns all avatars which are visible for the currently logged in user.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="username" style="query" type="xs:string">
                            <ns2:doc>username</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested user is not found.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="avatars" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;system&quot; : [ {
    &quot;id&quot; : &quot;1000&quot;,
    &quot;owner&quot; : &quot;fred&quot;,
    &quot;isSystemAvatar&quot; : true,
    &quot;isSelected&quot; : true,
    &quot;selected&quot; : true
  } ],
  &quot;custom&quot; : [ {
    &quot;id&quot; : &quot;1010&quot;,
    &quot;owner&quot; : &quot;andrew&quot;,
    &quot;isSystemAvatar&quot; : false,
    &quot;isSelected&quot; : false,
    &quot;selected&quot; : false
  } ]
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a map containing a list of avatars for both custom an system avatars</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if the current user is not authenticated.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="500">
                            <ns2:doc>Returned if an error occurs while retrieving the list of avatars.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="avatar/{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:long">
                    <ns2:doc>database id for avatar</ns2:doc>
                </ns2:param>
                <ns2:method id="deleteAvatar" name="DELETE">
                    <ns2:doc>Deletes avatar</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="username" style="query" type="xs:string">
                            <ns2:doc>username</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="204" mediaType="application/json">
                            <ns2:doc>Returned if the avatar is successfully deleted.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the avatar does not exist or the currently authenticated user does not have permission to
      delete it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if the currently authenticated user does not have permission to delete the avatar.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="viewissue/search">
                <ns2:method id="findUsersWithBrowsePermission" name="GET">
                    <ns2:doc>Returns a list of active users that match the search string. This resource cannot be accessed anonymously.
 Given an issue key this resource will provide a list of users that match the search string and have
 the browse issue permission for the issue provided.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="username" style="query" type="xs:string">
                            <ns2:doc>the username</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueKey" style="query" type="xs:string">
                            <ns2:doc>the issue key for the issue being edited we need to find viewable users for.</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="projectKey" style="query" type="xs:string">
                            <ns2:doc>the optional project key to search for users with if no issueKey is supplied.</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="startAt" style="query" type="xs:int">
                            <ns2:doc>the index of the first user to return (0-based)</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="maxResults" style="query" type="xs:int">
                            <ns2:doc>the maximum number of users to return (defaults to 50). The maximum allowed value is 1000.
 If you specify a value that is higher than this number, your search results will be truncated.</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested user is not found.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="user" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>[ {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
  &quot;name&quot; : &quot;fred&quot;,
  &quot;avatarUrls&quot; : {
    &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
    &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
    &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
    &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
  },
  &quot;displayName&quot; : &quot;Fred F. User&quot;,
  &quot;active&quot; : false
}, {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=andrew&quot;,
  &quot;name&quot; : &quot;andrew&quot;,
  &quot;avatarUrls&quot; : {
    &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=andrew&quot;,
    &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=andrew&quot;,
    &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=andrew&quot;,
    &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=andrew&quot;
  },
  &quot;displayName&quot; : &quot;Andrew Anderson&quot;,
  &quot;active&quot; : false
} ]</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a full representation of a JIRA user in JSON format.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if the current user is not authenticated.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if no project or issue key was provided</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="picker">
                <ns2:method id="findUsersForPicker" name="GET">
                    <ns2:doc>Returns a list of users matching query with highlighting. This resource cannot be accessed anonymously.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="query" style="query" type="xs:string">
                            <ns2:doc>A string used to search username, Name or e-mail address</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="maxResults" style="query" type="xs:int">
                            <ns2:doc>the maximum number of users to return (defaults to 50). The maximum allowed value is 1000.
 If you specify a value that is higher than this number, your search results will be truncated.</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="showAvatar" style="query" type="xs:boolean"/>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="exclude" style="query" type="xs:string"/>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested user is not found.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="List of users" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;users&quot; : [ {
    &quot;name&quot; : &quot;fred&quot;,
    &quot;key&quot; : &quot;fred&quot;,
    &quot;html&quot; : &quot;fred@example.com&quot;,
    &quot;displayName&quot; : &quot;Fred Grumble&quot;,
    &quot;avatarUrl&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;
  } ],
  &quot;total&quot; : 25,
  &quot;header&quot; : &quot;Showing 20 of 25 matching groups&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a full representation of a JIRA user in JSON format.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if the current user is not authenticated.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="assignable/search">
                <ns2:method id="findAssignableUsers" name="GET">
                    <ns2:doc>Returns a list of users that match the search string. This resource cannot be accessed anonymously.
 Please note that this resource should be called with an issue key when a list of assignable users is retrieved
 for editing.  For create only a project key should be supplied.  The list of assignable users may be incorrect
 if it's called with the project key for editing.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="username" style="query" type="xs:string">
                            <ns2:doc>the username</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="project" style="query" type="xs:string">
                            <ns2:doc>the key of the project we are finding assignable users for</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueKey" style="query" type="xs:string">
                            <ns2:doc>the issue key for the issue being edited we need to find assignable users for.</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="startAt" style="query" type="xs:int">
                            <ns2:doc>the index of the first user to return (0-based)</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="maxResults" style="query" type="xs:int">
                            <ns2:doc>the maximum number of users to return (defaults to 50). The maximum allowed value is 1000.
 If you specify a value that is higher than this number, your search results will be truncated.</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="actionDescriptorId" style="query" type="xs:int"/>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested user is not found.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="user" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
  &quot;name&quot; : &quot;fred&quot;,
  &quot;emailAddress&quot; : &quot;fred@example.com&quot;,
  &quot;avatarUrls&quot; : {
    &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
    &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
    &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
    &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
  },
  &quot;displayName&quot; : &quot;Fred F. User&quot;,
  &quot;active&quot; : true,
  &quot;timeZone&quot; : &quot;Australia/Sydney&quot;,
  &quot;groups&quot; : {
    &quot;size&quot; : 3,
    &quot;items&quot; : [ {
      &quot;name&quot; : &quot;jira-user&quot;,
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/group?groupname=jira-user&quot;
    }, {
      &quot;name&quot; : &quot;jira-admin&quot;,
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/group?groupname=jira-admin&quot;
    }, {
      &quot;name&quot; : &quot;important&quot;,
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/group?groupname=important&quot;
    } ]
  },
  &quot;expand&quot; : &quot;groups&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a full representation of a JIRA user in JSON format.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if the current user is not authenticated.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if no project or issue key was provided</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="search">
                <ns2:method id="findUsers" name="GET">
                    <ns2:doc>Returns a list of users that match the search string. This resource cannot be accessed anonymously.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="username" style="query" type="xs:string">
                            <ns2:doc>A query string used to search username, name or e-mail address</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="startAt" style="query" type="xs:int">
                            <ns2:doc>the index of the first user to return (0-based)</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="maxResults" style="query" type="xs:int">
                            <ns2:doc>the maximum number of users to return (defaults to 50). The maximum allowed value is 1000.
 If you specify a value that is higher than this number, your search results will be truncated.</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="includeActive" style="query" type="xs:boolean">
                            <ns2:doc>If true, then active users are included in the results (default true)</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="includeInactive" style="query" type="xs:boolean">
                            <ns2:doc>If true, then inactive users are included in the results (default false)</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested user is not found.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="List of users" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>[ {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
  &quot;name&quot; : &quot;fred&quot;,
  &quot;avatarUrls&quot; : {
    &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
    &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
    &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
    &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
  },
  &quot;displayName&quot; : &quot;Fred F. User&quot;,
  &quot;active&quot; : false
}, {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=andrew&quot;,
  &quot;name&quot; : &quot;andrew&quot;,
  &quot;avatarUrls&quot; : {
    &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=andrew&quot;,
    &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=andrew&quot;,
    &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=andrew&quot;,
    &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=andrew&quot;
  },
  &quot;displayName&quot; : &quot;Andrew Anderson&quot;,
  &quot;active&quot; : false
} ]</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a full representation of a JIRA user in JSON format.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if the current user is not authenticated.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="mypreferences">
            <ns2:doc>Provide preferences of the currently logged in user.</ns2:doc>
            <ns2:method id="setPreference" name="PUT">
                <ns2:doc>Sets preference of the currently logged in user. Preference key must be provided as input parameters (key). Value
 must be provided as post body. If key or value parameter is not provided - status code 404. If preference is set
 - status code 204.</ns2:doc>
                <ns2:request>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="key" style="query" type="xs:string">
                        <ns2:doc>- key of the preference to be set.</ns2:doc>
                    </ns2:param>
                    <ns2:representation mediaType="application/json"/>
                </ns2:request>
                <ns2:response>
                    <ns2:doc>empty response</ns2:doc>
                    <ns2:representation mediaType="application/json"/>
                </ns2:response>
            </ns2:method>
            <ns2:method id="removePreference" name="DELETE">
                <ns2:doc>Removes preference of the currently logged in user. Preference key must be provided as input parameters (key). If
 key parameter is not provided or wrong - status code 404. If preference is unset - status code 204.</ns2:doc>
                <ns2:request>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="key" style="query" type="xs:string">
                        <ns2:doc>- key of the preference to be removed.</ns2:doc>
                    </ns2:param>
                </ns2:request>
                <ns2:response>
                    <ns2:doc>empty response</ns2:doc>
                    <ns2:representation mediaType="application/json"/>
                </ns2:response>
            </ns2:method>
            <ns2:method id="getPreference" name="GET">
                <ns2:doc>Returns preference of the currently logged in user. Preference key must be provided as input parameter (key). The
 value is returned exactly as it is. If key parameter is not provided or wrong - status code 404. If value is
 found  - status code 200.</ns2:doc>
                <ns2:request>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="key" style="query" type="xs:string">
                        <ns2:doc>- key of the preference to be returned.</ns2:doc>
                    </ns2:param>
                </ns2:request>
                <ns2:response>
                    <ns2:doc>response with value of one preference of currently logged in user.</ns2:doc>
                    <ns2:representation mediaType="application/json"/>
                </ns2:response>
            </ns2:method>
        </ns2:resource>
        <ns2:resource path="settings">
            <ns2:doc>REST resource for changing the JIRA base URL.</ns2:doc>
            <ns2:resource path="baseUrl">
                <ns2:method id="setBaseURL" name="PUT">
                    <ns2:doc>Sets the base URL that is configured for this JIRA instance.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>http://jira.atlassian.com/</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="priority">
            <ns2:method id="getPriorities" name="GET">
                <ns2:doc>Returns a list of all issue priorities.</ns2:doc>
                <ns2:response>
                    <ns2:representation element="list of priorities" status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>[ {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/priority/3&quot;,
  &quot;statusColor&quot; : &quot;#009900&quot;,
  &quot;description&quot; : &quot;Major loss of function.&quot;,
  &quot;iconUrl&quot; : &quot;http://www.example.com/jira/images/icons/priorities/major.png&quot;,
  &quot;name&quot; : &quot;Major&quot;
}, {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/priority/5&quot;,
  &quot;statusColor&quot; : &quot;#cfcfcf&quot;,
  &quot;description&quot; : &quot;Very little impact.&quot;,
  &quot;iconUrl&quot; : &quot;http://www.example.com/jira/images/icons/priorities/trivial.png&quot;,
  &quot;name&quot; : &quot;Trivial&quot;
} ]</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returned if the priorities exists and the user has permission to view it. Contains a full representation of
      the priority in JSON format.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:resource path="{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string">
                    <ns2:doc>a String containing the priority id</ns2:doc>
                </ns2:param>
                <ns2:method id="getPriority" name="GET">
                    <ns2:doc>Returns an issue priority.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the issue priority does not exist or is not visible to the calling user.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="issuePriority" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/priority/3&quot;,
  &quot;statusColor&quot; : &quot;#009900&quot;,
  &quot;description&quot; : &quot;Major loss of function.&quot;,
  &quot;iconUrl&quot; : &quot;http://www.example.com/jira/images/icons/priorities/major.png&quot;,
  &quot;name&quot; : &quot;Major&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the issue priority exists and is visible by the calling user. Contains a full representation of
      the issue priority in JSON.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="workflowscheme">
            <ns2:method id="createScheme" name="POST">
                <ns2:doc>Create a new workflow scheme.

 The body contains a representation of the new scheme. Values not passed are assumed to be set to their defaults.</ns2:doc>
                <ns2:request>
                    <ns2:representation mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;name&quot; : &quot;New Workflow Scheme Name&quot;,
  &quot;description&quot; : &quot;New Workflow Scheme Description&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  }
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                    </ns2:representation>
                </ns2:request>
                <ns2:response>
                    <ns2:representation status="201">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;id&quot; : 101010,
  &quot;name&quot; : &quot;Workflow Scheme One&quot;,
  &quot;description&quot; : &quot;Workflow Scheme One Description&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId2&quot; : &quot;WorkflowName&quot;,
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;draft&quot; : false,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/workflowscheme/101010&quot;
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>The newly created scheme.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="401">
                        <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:resource path="{id}/default">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:long">
                    <ns2:doc>the id of the scheme.</ns2:doc>
                </ns2:param>
                <ns2:method id="getDefault" name="GET">
                    <ns2:doc>Return the default workflow from the passed workflow scheme.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="returnDraftIfExists" style="query" type="xs:boolean" default="false">
                            <ns2:doc>when true indicates that a scheme's draft, if it exists, should be queried instead of
  the scheme itself.</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned when the workflow scheme does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;workflow&quot; : &quot;WorkflowName&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="deleteDefault" name="DELETE">
                    <ns2:doc>Remove the default workflow from the passed workflow scheme.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="updateDraftIfNeeded" style="query" type="xs:boolean">
                            <ns2:doc>when true will create and return a draft when the workflow scheme cannot be edited
 (e.g. when it is being used by a project).</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the scheme does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 101010,
  &quot;name&quot; : &quot;Workflow Scheme One&quot;,
  &quot;description&quot; : &quot;Workflow Scheme One Description&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId2&quot; : &quot;WorkflowName&quot;,
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;draft&quot; : false,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/workflowscheme/101010&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned on success.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="updateDefault" name="PUT">
                    <ns2:doc>Set the default workflow for the passed workflow scheme.

 The passed representation can have its
 updateDraftIfNeeded flag set to true to indicate that the draft should be created/updated when the actual scheme
 cannot be edited.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;workflow&quot; : &quot;WorkflowName&quot;,
  &quot;updateDraftIfNeeded&quot; : false
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the scheme does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 101010,
  &quot;name&quot; : &quot;Workflow Scheme One&quot;,
  &quot;description&quot; : &quot;Workflow Scheme One Description&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId2&quot; : &quot;WorkflowName&quot;,
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;draft&quot; : false,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/workflowscheme/101010&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned on success.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:long">
                    <ns2:doc>the id of the scheme.</ns2:doc>
                </ns2:param>
                <ns2:method id="update" name="PUT">
                    <ns2:doc>Update the passed workflow scheme.

 The body of the request is a representation of the workflow scheme. Values not passed are assumed to indicate
 no change for that field.

 The passed representation can have its updateDraftIfNeeded flag set to true to indicate that the draft
 should be created and/or updated when the actual scheme cannot be edited (e.g. when the scheme is being used by
 a project). Values not appearing the body will not be touched.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 57585,
  &quot;name&quot; : &quot;Updated Workflow Scheme Name&quot;,
  &quot;description&quot; : &quot;Updated Workflow Scheme Name&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;updateDraftIfNeeded&quot; : false
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested scheme does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 101010,
  &quot;name&quot; : &quot;Workflow Scheme One&quot;,
  &quot;description&quot; : &quot;Workflow Scheme One Description&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId2&quot; : &quot;WorkflowName&quot;,
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;draft&quot; : false,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/workflowscheme/101010&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>The updated scheme.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="getById" name="GET">
                    <ns2:doc>Returns the requested workflow scheme to the caller.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="returnDraftIfExists" style="query" type="xs:boolean" default="false">
                            <ns2:doc>when true indicates that a scheme's draft, if it exists, should be queried instead of
  the scheme itself.</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested scheme does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 101010,
  &quot;name&quot; : &quot;Workflow Scheme One&quot;,
  &quot;description&quot; : &quot;Workflow Scheme One Description&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId2&quot; : &quot;WorkflowName&quot;,
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;draft&quot; : false,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/workflowscheme/101010&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the scheme exists and the caller has permission to see it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="deleteScheme" name="DELETE">
                    <ns2:doc>Delete the passed workflow scheme.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>If the scheme was deleted.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested scheme does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if the requested scheme is active (i.e. being used by JIRA).</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{id}/issuetype/{issueType}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:long">
                    <ns2:doc>the id of the scheme.</ns2:doc>
                </ns2:param>
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueType" style="template" type="xs:string">
                    <ns2:doc>the issue type being set.</ns2:doc>
                </ns2:param>
                <ns2:method id="getIssueType" name="GET">
                    <ns2:doc>Returns the issue type mapping for the passed workflow scheme.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="returnDraftIfExists" style="query" type="xs:boolean" default="false">
                            <ns2:doc>when true indicates that a scheme's draft, if it exists, should be queried instead of
  the scheme itself.</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if either the requested scheme or issue type does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;issueType&quot; : &quot;IssueTypeId&quot;,
  &quot;workflow&quot; : &quot;WorkflowName&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned on success.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="deleteIssueType" name="DELETE">
                    <ns2:doc>Remove the specified issue type mapping from the scheme.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="updateDraftIfNeeded" style="query" type="xs:boolean">
                            <ns2:doc>when true will create and return a draft when the workflow scheme cannot be edited
 (e.g. when it is being used by a project).</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if either the requested scheme or issue type does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 101010,
  &quot;name&quot; : &quot;Workflow Scheme One&quot;,
  &quot;description&quot; : &quot;Workflow Scheme One Description&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId2&quot; : &quot;WorkflowName&quot;,
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;draft&quot; : false,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/workflowscheme/101010&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned on success.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="setIssueType" name="PUT">
                    <ns2:doc>Set the issue type mapping for the passed scheme.

 The passed representation can have its updateDraftIfNeeded flag set to true to indicate that
 the draft should be created/updated when the actual scheme cannot be edited.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;issueType&quot; : &quot;IssueTypeId&quot;,
  &quot;workflow&quot; : &quot;WorkflowName&quot;,
  &quot;updateDraftIfNeeded&quot; : false
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if either the requested scheme or issue type does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 101010,
  &quot;name&quot; : &quot;Workflow Scheme One&quot;,
  &quot;description&quot; : &quot;Workflow Scheme One Description&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId2&quot; : &quot;WorkflowName&quot;,
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;draft&quot; : false,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/workflowscheme/101010&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned on success.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{id}/workflow">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:long">
                    <ns2:doc>the id of the scheme.</ns2:doc>
                </ns2:param>
                <ns2:method id="deleteWorkflowMapping" name="DELETE">
                    <ns2:doc>Delete the passed workflow from the workflow scheme.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="workflowName" style="query" type="xs:string">
                            <ns2:doc>the name of the workflow to delete.</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="updateDraftIfNeeded" style="query" type="xs:boolean">
                            <ns2:doc>flag to indicate if a draft should be created if necessary to delete the workflow
   from the scheme.</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested scheme or workflow does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>The scheme with the workflow deleted.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="updateWorkflowMapping" name="PUT">
                    <ns2:doc>Update the scheme to include the passed mapping.

 The body is a representation of the workflow mapping.
 Values not passed are assumed to indicate no change for that field.

 The passed representation can have its updateDraftIfNeeded flag set to true to indicate that the draft
 should be created/updated when the actual scheme cannot be edited.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="workflowName" style="query" type="xs:string">
                            <ns2:doc>the name of the workflow mapping to update.</ns2:doc>
                        </ns2:param>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;workflow&quot; : &quot;WorkflowName3&quot;,
  &quot;issueTypes&quot; : [ &quot;IssueTypeId&quot; ],
  &quot;updateDraftIfNeeded&quot; : true
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 101010,
  &quot;name&quot; : &quot;Workflow Scheme One&quot;,
  &quot;description&quot; : &quot;Workflow Scheme One Description&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId2&quot; : &quot;WorkflowName&quot;,
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;draft&quot; : false,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/workflowscheme/101010&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>The updated scheme.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="getWorkflow" name="GET">
                    <ns2:doc>Returns the workflow mappings or requested mapping to the caller for the passed scheme.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="workflowName" style="query" type="xs:string">
                            <ns2:doc>the workflow mapping to return. Null can be passed to return all mappings. Must be a valid workflow name.</ns2:doc>
                        </ns2:param>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="returnDraftIfExists" style="query" type="xs:boolean" default="false">
                            <ns2:doc>when true indicates that a scheme's draft, if it exists, should be queried instead of
  the scheme itself.</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if either the requested scheme or workflow does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;workflow&quot; : &quot;WorkflowName&quot;,
  &quot;issueTypes&quot; : [ &quot;IssueTypeId&quot;, &quot;IssueTypeId2&quot; ],
  &quot;defaultMapping&quot; : false
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned on success.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{id}/draft/issuetype/{issueType}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:long">
                    <ns2:doc>the id of the parent scheme.</ns2:doc>
                </ns2:param>
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="issueType" style="template" type="xs:string">
                    <ns2:doc>the issue type being set.</ns2:doc>
                </ns2:param>
                <ns2:method id="getDraftIssueType" name="GET">
                    <ns2:doc>Returns the issue type mapping for the passed draft workflow scheme.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if either the requested scheme or issue type does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;issueType&quot; : &quot;IssueTypeId&quot;,
  &quot;workflow&quot; : &quot;WorkflowName&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned on success.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="deleteDraftIssueType" name="DELETE">
                    <ns2:doc>Remove the specified issue type mapping from the draft scheme.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if either the requested scheme or issue type does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 17218781,
  &quot;name&quot; : &quot;Workflow Scheme Two&quot;,
  &quot;description&quot; : &quot;Workflow Scheme Two Description&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId2&quot; : &quot;WorkflowName&quot;,
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;originalDefaultWorkflow&quot; : &quot;ParentsDefaultWorkflowName&quot;,
  &quot;originalIssueTypeMappings&quot; : {
    &quot;IssueTypeId&quot; : &quot;WorkflowName2&quot;
  },
  &quot;draft&quot; : true,
  &quot;lastModifiedUser&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;emailAddress&quot; : &quot;fred@example.com&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : true,
    &quot;timeZone&quot; : &quot;Australia/Sydney&quot;,
    &quot;groups&quot; : {
      &quot;size&quot; : 3,
      &quot;items&quot; : [ ]
    }
  },
  &quot;lastModified&quot; : &quot;Today 12:45&quot;,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/workflowscheme/17218781/draft&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned on success.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="setDraftIssueType" name="PUT">
                    <ns2:doc>Set the issue type mapping for the passed draft scheme.

 The passed representation can have its updateDraftIfNeeded flag set to true to indicate that
 the draft should be created/updated when the actual scheme cannot be edited.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;issueType&quot; : &quot;IssueTypeId&quot;,
  &quot;workflow&quot; : &quot;WorkflowName&quot;,
  &quot;updateDraftIfNeeded&quot; : false
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if either the requested scheme or issue type does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 17218781,
  &quot;name&quot; : &quot;Workflow Scheme Two&quot;,
  &quot;description&quot; : &quot;Workflow Scheme Two Description&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId2&quot; : &quot;WorkflowName&quot;,
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;originalDefaultWorkflow&quot; : &quot;ParentsDefaultWorkflowName&quot;,
  &quot;originalIssueTypeMappings&quot; : {
    &quot;IssueTypeId&quot; : &quot;WorkflowName2&quot;
  },
  &quot;draft&quot; : true,
  &quot;lastModifiedUser&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;emailAddress&quot; : &quot;fred@example.com&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : true,
    &quot;timeZone&quot; : &quot;Australia/Sydney&quot;,
    &quot;groups&quot; : {
      &quot;size&quot; : 3,
      &quot;items&quot; : [ ]
    }
  },
  &quot;lastModified&quot; : &quot;Today 12:45&quot;,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/workflowscheme/17218781/draft&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned on success.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{id}/draft">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:long">
                    <ns2:doc>the id of the parent scheme.</ns2:doc>
                </ns2:param>
                <ns2:method id="getDraftById" name="GET">
                    <ns2:doc>Returns the requested draft workflow scheme to the caller.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested draft scheme does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 17218781,
  &quot;name&quot; : &quot;Workflow Scheme Two&quot;,
  &quot;description&quot; : &quot;Workflow Scheme Two Description&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId2&quot; : &quot;WorkflowName&quot;,
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;originalDefaultWorkflow&quot; : &quot;ParentsDefaultWorkflowName&quot;,
  &quot;originalIssueTypeMappings&quot; : {
    &quot;IssueTypeId&quot; : &quot;WorkflowName2&quot;
  },
  &quot;draft&quot; : true,
  &quot;lastModifiedUser&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;emailAddress&quot; : &quot;fred@example.com&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : true,
    &quot;timeZone&quot; : &quot;Australia/Sydney&quot;,
    &quot;groups&quot; : {
      &quot;size&quot; : 3,
      &quot;items&quot; : [ ]
    }
  },
  &quot;lastModified&quot; : &quot;Today 12:45&quot;,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/workflowscheme/17218781/draft&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the scheme exists and the caller has permission to see it.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="deleteDraftById" name="DELETE">
                    <ns2:doc>Delete the passed draft workflow scheme.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>If the scheme was deleted.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested draft scheme or parent scheme does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="updateDraft" name="PUT">
                    <ns2:doc>Update a draft workflow scheme. The draft will created if necessary.

 The body is a representation of the workflow scheme. Values not passed are assumed to indicate no change for that field.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 57585,
  &quot;name&quot; : &quot;Updated Workflow Scheme Name&quot;,
  &quot;description&quot; : &quot;Updated Workflow Scheme Name&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;updateDraftIfNeeded&quot; : false
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested scheme does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 17218781,
  &quot;name&quot; : &quot;Workflow Scheme Two&quot;,
  &quot;description&quot; : &quot;Workflow Scheme Two Description&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId2&quot; : &quot;WorkflowName&quot;,
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;originalDefaultWorkflow&quot; : &quot;ParentsDefaultWorkflowName&quot;,
  &quot;originalIssueTypeMappings&quot; : {
    &quot;IssueTypeId&quot; : &quot;WorkflowName2&quot;
  },
  &quot;draft&quot; : true,
  &quot;lastModifiedUser&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;emailAddress&quot; : &quot;fred@example.com&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : true,
    &quot;timeZone&quot; : &quot;Australia/Sydney&quot;,
    &quot;groups&quot; : {
      &quot;size&quot; : 3,
      &quot;items&quot; : [ ]
    }
  },
  &quot;lastModified&quot; : &quot;Today 12:45&quot;,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/workflowscheme/17218781/draft&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>The updated/created scheme.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{id}/createdraft">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:long">
                    <ns2:doc>the id of the parent scheme.</ns2:doc>
                </ns2:param>
                <ns2:method id="createDraftForParent" name="POST">
                    <ns2:doc>Create a draft for the passed scheme. The draft will be a copy of the state of the parent.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="201">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 17218781,
  &quot;name&quot; : &quot;Workflow Scheme Two&quot;,
  &quot;description&quot; : &quot;Workflow Scheme Two Description&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId2&quot; : &quot;WorkflowName&quot;,
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;originalDefaultWorkflow&quot; : &quot;ParentsDefaultWorkflowName&quot;,
  &quot;originalIssueTypeMappings&quot; : {
    &quot;IssueTypeId&quot; : &quot;WorkflowName2&quot;
  },
  &quot;draft&quot; : true,
  &quot;lastModifiedUser&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;emailAddress&quot; : &quot;fred@example.com&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : true,
    &quot;timeZone&quot; : &quot;Australia/Sydney&quot;,
    &quot;groups&quot; : {
      &quot;size&quot; : 3,
      &quot;items&quot; : [ ]
    }
  },
  &quot;lastModified&quot; : &quot;Today 12:45&quot;,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/workflowscheme/17218781/draft&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>The newly created scheme.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{id}/draft/workflow">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:long">
                    <ns2:doc>the id of the parent scheme.</ns2:doc>
                </ns2:param>
                <ns2:method id="deleteDraftWorkflowMapping" name="DELETE">
                    <ns2:doc>Delete the passed workflow from the draft workflow scheme.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="workflowName" style="query" type="xs:string">
                            <ns2:doc>the name of the workflow to delete.</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the requested scheme or workflow does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>The scheme with the workflow deleted.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="updateDraftWorkflowMapping" name="PUT">
                    <ns2:doc>Update the draft scheme to include the passed mapping.

 The body is a representation of the workflow mapping.
 Values not passed are assumed to indicate no change for that field.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="workflowName" style="query" type="xs:string">
                            <ns2:doc>the name of the workflow mapping to update.</ns2:doc>
                        </ns2:param>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;workflow&quot; : &quot;WorkflowName3&quot;,
  &quot;issueTypes&quot; : [ &quot;IssueTypeId&quot; ],
  &quot;updateDraftIfNeeded&quot; : true
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 101010,
  &quot;name&quot; : &quot;Workflow Scheme One&quot;,
  &quot;description&quot; : &quot;Workflow Scheme One Description&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId2&quot; : &quot;WorkflowName&quot;,
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;draft&quot; : false,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/workflowscheme/101010&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>The updated scheme.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="getDraftWorkflow" name="GET">
                    <ns2:doc>Returns the draft workflow mappings or requested mapping to the caller.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="workflowName" style="query" type="xs:string">
                            <ns2:doc>the workflow mapping to return. Null can be passed to return all mappings. Must be a valid workflow name.</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if either the requested scheme or workflow does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;workflow&quot; : &quot;WorkflowName&quot;,
  &quot;issueTypes&quot; : [ &quot;IssueTypeId&quot;, &quot;IssueTypeId2&quot; ],
  &quot;defaultMapping&quot; : false
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned on success.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{id}/draft/default">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:long">
                    <ns2:doc>the id of the parent scheme.</ns2:doc>
                </ns2:param>
                <ns2:method id="getDraftDefault" name="GET">
                    <ns2:doc>Return the default workflow from the passed draft workflow scheme to the caller.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned when the workflow scheme does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;workflow&quot; : &quot;WorkflowName&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="deleteDraftDefault" name="DELETE">
                    <ns2:doc>Remove the default workflow from the passed draft workflow scheme.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the scheme does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 17218781,
  &quot;name&quot; : &quot;Workflow Scheme Two&quot;,
  &quot;description&quot; : &quot;Workflow Scheme Two Description&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId2&quot; : &quot;WorkflowName&quot;,
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;originalDefaultWorkflow&quot; : &quot;ParentsDefaultWorkflowName&quot;,
  &quot;originalIssueTypeMappings&quot; : {
    &quot;IssueTypeId&quot; : &quot;WorkflowName2&quot;
  },
  &quot;draft&quot; : true,
  &quot;lastModifiedUser&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;emailAddress&quot; : &quot;fred@example.com&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : true,
    &quot;timeZone&quot; : &quot;Australia/Sydney&quot;,
    &quot;groups&quot; : {
      &quot;size&quot; : 3,
      &quot;items&quot; : [ ]
    }
  },
  &quot;lastModified&quot; : &quot;Today 12:45&quot;,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/workflowscheme/17218781/draft&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned on success.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="updateDraftDefault" name="PUT">
                    <ns2:doc>Set the default workflow for the passed draft workflow scheme.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;workflow&quot; : &quot;WorkflowName&quot;,
  &quot;updateDraftIfNeeded&quot; : false
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the scheme does not exist.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="200">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;id&quot; : 17218781,
  &quot;name&quot; : &quot;Workflow Scheme Two&quot;,
  &quot;description&quot; : &quot;Workflow Scheme Two Description&quot;,
  &quot;defaultWorkflow&quot; : &quot;DefaultWorkflowName&quot;,
  &quot;issueTypeMappings&quot; : {
    &quot;IsueTypeId2&quot; : &quot;WorkflowName&quot;,
    &quot;IsueTypeId&quot; : &quot;WorkflowName&quot;
  },
  &quot;originalDefaultWorkflow&quot; : &quot;ParentsDefaultWorkflowName&quot;,
  &quot;originalIssueTypeMappings&quot; : {
    &quot;IssueTypeId&quot; : &quot;WorkflowName2&quot;
  },
  &quot;draft&quot; : true,
  &quot;lastModifiedUser&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;emailAddress&quot; : &quot;fred@example.com&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : true,
    &quot;timeZone&quot; : &quot;Australia/Sydney&quot;,
    &quot;groups&quot; : {
      &quot;size&quot; : 3,
      &quot;items&quot; : [ ]
    }
  },
  &quot;lastModified&quot; : &quot;Today 12:45&quot;,
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/workflowscheme/17218781/draft&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned on success.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if there is no user or if the user has not entered a websudo
      session.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="customFieldOption">
            <ns2:resource path="{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string">
                    <ns2:doc>a String containing an Custom Field Option id</ns2:doc>
                </ns2:param>
                <ns2:method id="getCustomFieldOption" name="GET">
                    <ns2:doc>Returns a full representation of the Custom Field Option that has the given id.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the Custom Field Option does not exist, or is not visible to the calling user.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="customFieldOption" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://localhost:8090/jira/rest/api/2.0/customFieldOption/3&quot;,
  &quot;value&quot; : &quot;Blue&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returned if the Custom Field Option exists and is visible by the calling user.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="field">
            <ns2:method id="getFields" name="GET">
                <ns2:doc>Returns a list of all fields, both System and Custom</ns2:doc>
                <ns2:response>
                    <ns2:representation element="List of field" status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>[ {
  &quot;id&quot; : &quot;description&quot;,
  &quot;name&quot; : &quot;Description&quot;,
  &quot;custom&quot; : false,
  &quot;orderable&quot; : true,
  &quot;navigable&quot; : true,
  &quot;searchable&quot; : true,
  &quot;schema&quot; : {
    &quot;type&quot; : &quot;string&quot;,
    &quot;system&quot; : &quot;description&quot;
  }
}, {
  &quot;id&quot; : &quot;summary&quot;,
  &quot;name&quot; : &quot;Summary&quot;,
  &quot;custom&quot; : false,
  &quot;schema&quot; : {
    &quot;type&quot; : &quot;string&quot;,
    &quot;system&quot; : &quot;summary&quot;
  }
} ]</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Contains a full representation of all visible fields in JSON.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:method id="createCustomField" name="POST">
                <ns2:doc>Creates a custom field using a definition (object encapsulating custom field data)</ns2:doc>
                <ns2:request>
                    <ns2:representation mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;name&quot; : &quot;New custom field&quot;,
  &quot;description&quot; : &quot;Custom field for picking groups&quot;,
  &quot;type&quot; : &quot;com.atlassian.jira.plugin.system.customfieldtypes:grouppicker&quot;,
  &quot;searcherKey&quot; : &quot;com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher&quot;
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                    </ns2:representation>
                </ns2:request>
                <ns2:response>
                    <ns2:representation status="201">
                        <ns2:doc>Returned if custom field was created. {@link FieldBean#DOC_EXAMPLE_CF}</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="400">
                        <ns2:doc>Returned if the input is invalid (e.g. invalid values).</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="500">
                        <ns2:doc>Returned if exception occured during custom field creation.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
        </ns2:resource>
        <ns2:resource path="licenseValidator">
            <ns2:doc>A REST endpoint to provide simple validation services for a JIRA license.
 Typically used by the setup phase of the JIRA application.  This will return an object
 with a list of errors as key, value pairs.</ns2:doc>
            <ns2:method id="validate" name="POST">
                <ns2:request>
                    <ns2:representation mediaType="application/json"/>
                </ns2:request>
                <ns2:response>
                    <ns2:representation mediaType="application/json"/>
                </ns2:response>
            </ns2:method>
        </ns2:resource>
        <ns2:resource path="attachment">
            <ns2:resource path="meta">
                <ns2:method id="getAttachmentMeta" name="GET">
                    <ns2:doc>Returns the meta informations for an attachments, specifically if they are enabled and the maximum upload size allowed.</ns2:doc>
                    <ns2:response>
                        <ns2:representation element="attachmentMeta" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;enabled&quot; : true,
  &quot;uploadLimit&quot; : 1000000
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a JSON representation of the attachment capabilities.
      Consumers of this resource may also need to check if the logged in user has permission to upload or
      otherwise manipulate attachments using the {@link com.atlassian.jira.rest.v2.permission.PermissionsResource}.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:string">
                    <ns2:doc>the attachment id</ns2:doc>
                </ns2:param>
                <ns2:method id="removeAttachment" name="DELETE">
                    <ns2:doc>Remove an attachment from an issue.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Returned if successful.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the attachment is not found</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="403">
                            <ns2:doc>Returned if attachments is disabled or if you don't have permission to remove attachments from this issue.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="getAttachment" name="GET">
                    <ns2:doc>Returns the meta-data for an attachment, including the URI of the actual attached file.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="404">
                            <ns2:doc>Returned if the attachment with the given id does not exist, or is not accessible by the calling user.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation element="attachment" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2.0/attachments/10000&quot;,
  &quot;filename&quot; : &quot;picture.jpg&quot;,
  &quot;author&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;created&quot; : &quot;2013-05-19T06:30:50.701-0500&quot;,
  &quot;size&quot; : 23123,
  &quot;mimeType&quot; : &quot;image/jpeg&quot;,
  &quot;content&quot; : &quot;http://www.example.com/jira/attachments/10000&quot;,
  &quot;thumbnail&quot; : &quot;http://www.example.com/jira/secure/thumbnail/10000&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a JSON representation of the attachment meta-data. The representation does not contain the
      attachment itself, but contains a URI that can be used to download the actual attached file.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
        <ns2:resource path="search">
            <ns2:doc>Resource for searches.</ns2:doc>
            <ns2:method id="search" name="GET">
                <ns2:doc>Searches for issues using JQL.

 &lt;p&gt;&lt;b&gt;Sorting&lt;/b&gt;
  the &lt;code&gt;jql&lt;/code&gt; parameter is a full &lt;a href=&quot;http://confluence.atlassian.com/display/JIRA/Advanced+Searching&quot;&gt;JQL&lt;/a&gt;
  expression, and includes an &lt;code&gt;ORDER BY&lt;/code&gt; clause.
 &lt;/p&gt;

 &lt;p&gt;
  The &lt;code&gt;fields&lt;/code&gt; param (which can be specified multiple times) gives a comma-separated list of fields
  to include in the response. This can be used to retrieve a subset of fields.
  A particular field can be excluded by prefixing it with a minus.
  &lt;p&gt;
   By default, only navigable (&lt;code&gt;*navigable&lt;/code&gt;) fields are returned in this search resource. Note: the default is different
   in the get-issue resource -- the default there all fields (&lt;code&gt;*all&lt;/code&gt;).
  &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;*all&lt;/code&gt; - include all fields&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;*navigable&lt;/code&gt; - include just navigable fields&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;summary,comment&lt;/code&gt; - include just the summary and comments&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;-description&lt;/code&gt; - include navigable fields except the description (the default is &lt;code&gt;*navigable&lt;/code&gt; for search)&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;*all,-comment&lt;/code&gt; - include everything except comments&lt;/li&gt;
  &lt;/ul&gt;

 &lt;/p&gt;
 &lt;p&gt;&lt;b&gt;GET vs POST:&lt;/b&gt;
  If the JQL query is too large to be encoded as a query param you should instead
  POST to this resource.
 &lt;/p&gt;

 &lt;p&gt;&lt;b&gt;Expanding Issues in the Search Result:&lt;/b&gt;
  It is possible to expand the issues returned by directly specifying the expansion on the expand parameter passed
  in to this resources.
 &lt;/p&gt;
 &lt;p&gt;
  For instance, to expand the &amp;quot;changelog&amp;quot; for all the issues on the search result, it is neccesary to
  specify &amp;quot;changelog&amp;quot; as one of the values to expand.
 &lt;/p&gt;</ns2:doc>
                <ns2:request>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="jql" style="query" type="xs:string">
                        <ns2:doc>a JQL query string</ns2:doc>
                    </ns2:param>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="startAt" style="query" type="xs:int">
                        <ns2:doc>the index of the first issue to return (0-based)</ns2:doc>
                    </ns2:param>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="maxResults" style="query" type="xs:int">
                        <ns2:doc>the maximum number of issues to return (defaults to 50). The maximum allowable value is
 dictated by the JIRA property 'jira.search.views.default.max'. If you specify a value that is higher than this
 number, your search results will be truncated.</ns2:doc>
                    </ns2:param>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="fields" style="query" type="xs:string">
                        <ns2:doc>the list of fields to return for each issue. By default, all navigable fields are returned.</ns2:doc>
                    </ns2:param>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="expand" style="query" type="xs:string">
                        <ns2:doc>A comma-separated list of the parameters to expand.</ns2:doc>
                    </ns2:param>
                </ns2:request>
                <ns2:response>
                    <ns2:representation element="searchResults" status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;expand&quot; : &quot;names,schema&quot;,
  &quot;startAt&quot; : 0,
  &quot;maxResults&quot; : 50,
  &quot;total&quot; : 1,
  &quot;issues&quot; : [ {
    &quot;expand&quot; : &quot;&quot;,
    &quot;id&quot; : &quot;10001&quot;,
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/10001&quot;,
    &quot;key&quot; : &quot;HSP-1&quot;
  } ]
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returns a JSON representation of the search results.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="400">
                        <ns2:doc>Returned if there is a problem with the JQL query.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:method id="searchUsingSearchRequest" name="POST">
                <ns2:doc>Performs a search using JQL.</ns2:doc>
                <ns2:request>
                    <ns2:representation element="searchRequest" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;jql&quot; : &quot;project = HSP&quot;,
  &quot;startAt&quot; : 0,
  &quot;maxResults&quot; : 15,
  &quot;fields&quot; : [ &quot;summary&quot;, &quot;status&quot;, &quot;assignee&quot; ]
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                    </ns2:representation>
                </ns2:request>
                <ns2:response>
                    <ns2:representation element="searchResults" status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;expand&quot; : &quot;names,schema&quot;,
  &quot;startAt&quot; : 0,
  &quot;maxResults&quot; : 50,
  &quot;total&quot; : 1,
  &quot;issues&quot; : [ {
    &quot;expand&quot; : &quot;&quot;,
    &quot;id&quot; : &quot;10001&quot;,
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/issue/10001&quot;,
    &quot;key&quot; : &quot;HSP-1&quot;
  } ]
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returns a JSON representation of the search results.</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="400">
                        <ns2:doc>Returned if there is a problem with the JQL query.</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
        </ns2:resource>
        <ns2:resource path="filter">
            <ns2:doc>Resource for searches.</ns2:doc>
            <ns2:method id="createFilter" name="POST">
                <ns2:doc>Creates a new filter, and returns newly created filter.
 Currently sets permissions just using the users default sharing permissions</ns2:doc>
                <ns2:request>
                    <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="expand" style="query" type="xs:string">
                        <ns2:doc>the parameters to expand</ns2:doc>
                    </ns2:param>
                    <ns2:representation mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;name&quot; : &quot;All Open Bugs&quot;,
  &quot;description&quot; : &quot;Lists all open bugs&quot;,
  &quot;jql&quot; : &quot;type = Bug and resolution is empty&quot;,
  &quot;favourite&quot; : true
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                    </ns2:representation>
                </ns2:request>
                <ns2:response>
                    <ns2:representation element="filter" status="200" mediaType="application/json">
                        <ns2:doc>
                            <ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
<ns3:h6>Example</ns3:h6>
<ns3:pre>
    <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/filter/10000&quot;,
  &quot;id&quot; : &quot;10000&quot;,
  &quot;name&quot; : &quot;All Open Bugs&quot;,
  &quot;description&quot; : &quot;Lists all open bugs&quot;,
  &quot;owner&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;jql&quot; : &quot;type = Bug and resolution is empty&quot;,
  &quot;viewUrl&quot; : &quot;http://www.example.com/jira/secure/IssueNavigator.jspa?mode=hide&amp;requestId=10000&quot;,
  &quot;searchUrl&quot; : &quot;http://www.example.com/jira/rest/api/2/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty&quot;,
  &quot;favourite&quot; : true,
  &quot;sharePermissions&quot; : [ ],
  &quot;subscriptions&quot; : {
    &quot;size&quot; : 0,
    &quot;items&quot; : [ ],
    &quot;max-results&quot; : 1000,
    &quot;start-index&quot; : 0,
    &quot;end-index&quot; : 0
  }
}</ns3:code>
</ns3:pre>
                            </ns3:p>
                        </ns2:doc>
                        <ns2:doc>Returns a JSON representation of a filter</ns2:doc>
                    </ns2:representation>
                    <ns2:representation status="400">
                        <ns2:doc>Returned if the input is invalid (e.g. filter name was not provided).</ns2:doc>
                    </ns2:representation>
                </ns2:response>
            </ns2:method>
            <ns2:resource path="{id}">
                <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="template" type="xs:long">
                    <ns2:doc>The ID of the filter to delete.</ns2:doc>
                </ns2:param>
                <ns2:method id="getFilter" name="GET">
                    <ns2:doc>Returns a filter given an id</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="expand" style="query" type="xs:string">
                            <ns2:doc>the parameters to expand</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation element="filter" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/filter/10000&quot;,
  &quot;id&quot; : &quot;10000&quot;,
  &quot;name&quot; : &quot;All Open Bugs&quot;,
  &quot;description&quot; : &quot;Lists all open bugs&quot;,
  &quot;owner&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;jql&quot; : &quot;type = Bug and resolution is empty&quot;,
  &quot;viewUrl&quot; : &quot;http://www.example.com/jira/secure/IssueNavigator.jspa?mode=hide&amp;requestId=10000&quot;,
  &quot;searchUrl&quot; : &quot;http://www.example.com/jira/rest/api/2/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty&quot;,
  &quot;favourite&quot; : true,
  &quot;sharePermissions&quot; : [ ],
  &quot;subscriptions&quot; : {
    &quot;size&quot; : 0,
    &quot;items&quot; : [ ],
    &quot;max-results&quot; : 1000,
    &quot;start-index&quot; : 0,
    &quot;end-index&quot; : 0
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a JSON representation of a filter</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if there is a problem looking up the filter given the id</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="editFilter" name="PUT">
                    <ns2:doc>Updates an existing filter, and returns its new value.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="expand" style="query" type="xs:string">
                            <ns2:doc>the parameters to expand</ns2:doc>
                        </ns2:param>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;name&quot; : &quot;All Open Bugs&quot;,
  &quot;description&quot; : &quot;Lists all open bugs&quot;,
  &quot;jql&quot; : &quot;type = Bug and resolution is empty&quot;,
  &quot;favourite&quot; : true
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation element="filter" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/filter/10000&quot;,
  &quot;id&quot; : &quot;10000&quot;,
  &quot;name&quot; : &quot;All Open Bugs&quot;,
  &quot;description&quot; : &quot;Lists all open bugs&quot;,
  &quot;owner&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;jql&quot; : &quot;type = Bug and resolution is empty&quot;,
  &quot;viewUrl&quot; : &quot;http://www.example.com/jira/secure/IssueNavigator.jspa?mode=hide&amp;requestId=10000&quot;,
  &quot;searchUrl&quot; : &quot;http://www.example.com/jira/rest/api/2/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty&quot;,
  &quot;favourite&quot; : true,
  &quot;sharePermissions&quot; : [ ],
  &quot;subscriptions&quot; : {
    &quot;size&quot; : 0,
    &quot;items&quot; : [ ],
    &quot;max-results&quot; : 1000,
    &quot;start-index&quot; : 0,
    &quot;end-index&quot; : 0
  }
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a JSON representation of a filter</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if there is a problem updating up the filter of the given id</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="deleteFilter" name="DELETE">
                    <ns2:doc>Delete a filter.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="204">
                            <ns2:doc>Returned if the filter was removed successfully.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="401">
                            <ns2:doc>Returned if the calling user is not authenticated.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if an error occurs.</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="defaultShareScope">
                <ns2:method id="getDefaultShareScope" name="GET">
                    <ns2:doc>Returns the default share scope of the logged-in user.</ns2:doc>
                    <ns2:response>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;scope&quot; : &quot;GLOBAL&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns the default share scope of the logged-in user.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if there is a problem looking up preferences for the logged-in user</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
                <ns2:method id="setDefaultShareScope" name="PUT">
                    <ns2:doc>Sets the default share scope of the logged-in user. Available values are GLOBAL and PRIVATE.</ns2:doc>
                    <ns2:request>
                        <ns2:representation mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;scope&quot; : &quot;GLOBAL&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                        </ns2:representation>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>{
  &quot;scope&quot; : &quot;GLOBAL&quot;
}</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns the new default share scope of the logged-in user.</ns2:doc>
                        </ns2:representation>
                        <ns2:representation status="400">
                            <ns2:doc>Returned if there is a problem setting the preferences for the logged-in user</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
            <ns2:resource path="favourite">
                <ns2:method id="getFavouriteFilters" name="GET">
                    <ns2:doc>Returns the favourite filters of the logged-in user.</ns2:doc>
                    <ns2:request>
                        <ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="expand" style="query" type="xs:string">
                            <ns2:doc>the parameters to expand</ns2:doc>
                        </ns2:param>
                    </ns2:request>
                    <ns2:response>
                        <ns2:representation element="filter" status="200" mediaType="application/json">
                            <ns2:doc>
<ns3:p xmlns:ns3="http://www.w3.org/1999/xhtml">
    <ns3:h6>Example</ns3:h6>
    <ns3:pre>
        <ns3:code>[ {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/filter/10000&quot;,
  &quot;id&quot; : &quot;10000&quot;,
  &quot;name&quot; : &quot;All Open Bugs&quot;,
  &quot;description&quot; : &quot;Lists all open bugs&quot;,
  &quot;owner&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;jql&quot; : &quot;type = Bug and resolution is empty&quot;,
  &quot;viewUrl&quot; : &quot;http://www.example.com/jira/secure/IssueNavigator.jspa?mode=hide&amp;requestId=10000&quot;,
  &quot;searchUrl&quot; : &quot;http://www.example.com/jira/rest/api/2/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty&quot;,
  &quot;favourite&quot; : true,
  &quot;sharePermissions&quot; : [ ],
  &quot;subscriptions&quot; : {
    &quot;size&quot; : 0,
    &quot;items&quot; : [ ],
    &quot;max-results&quot; : 1000,
    &quot;start-index&quot; : 0,
    &quot;end-index&quot; : 0
  }
}, {
  &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/filter/10010&quot;,
  &quot;id&quot; : &quot;10010&quot;,
  &quot;name&quot; : &quot;My issues&quot;,
  &quot;description&quot; : &quot;Issues assigned to me&quot;,
  &quot;owner&quot; : {
    &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/user?username=fred&quot;,
    &quot;name&quot; : &quot;fred&quot;,
    &quot;avatarUrls&quot; : {
      &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=small&amp;ownerId=fred&quot;,
      &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=xsmall&amp;ownerId=fred&quot;,
      &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=medium&amp;ownerId=fred&quot;,
      &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/useravatar?size=large&amp;ownerId=fred&quot;
    },
    &quot;displayName&quot; : &quot;Fred F. User&quot;,
    &quot;active&quot; : false
  },
  &quot;jql&quot; : &quot;assignee = currentUser() and resolution is empty&quot;,
  &quot;viewUrl&quot; : &quot;http://www.example.com/jira/secure/IssueNavigator.jspa?mode=hide&amp;requestId=10010&quot;,
  &quot;searchUrl&quot; : &quot;http://www.example.com/jira/rest/api/2/search?jql=assignee+%3D+currentUser%28%29+and+resolution+is+empty&quot;,
  &quot;favourite&quot; : true,
  &quot;sharePermissions&quot; : [ {
    &quot;id&quot; : 10000,
    &quot;type&quot; : &quot;global&quot;
  }, {
    &quot;id&quot; : 10010,
    &quot;type&quot; : &quot;project&quot;,
    &quot;project&quot; : {
      &quot;self&quot; : &quot;http://www.example.com/jira/rest/api/2/project/EX&quot;,
      &quot;id&quot; : &quot;10000&quot;,
      &quot;key&quot; : &quot;EX&quot;,
      &quot;name&quot; : &quot;Example&quot;,
      &quot;avatarUrls&quot; : {
        &quot;24x24&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=small&amp;pid=10000&quot;,
        &quot;16x16&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=xsmall&amp;pid=10000&quot;,
        &quot;32x32&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=medium&amp;pid=10000&quot;,
        &quot;48x48&quot; : &quot;http://www.example.com/jira/secure/projectavatar?size=large&amp;pid=10000&quot;
      }
    }
  } ],
  &quot;subscriptions&quot; : {
    &quot;size&quot; : 0,
    &quot;items&quot; : [ ],
    &quot;max-results&quot; : 1000,
    &quot;start-index&quot; : 0,
    &quot;end-index&quot; : 0
  }
} ]</ns3:code>
    </ns3:pre>
</ns3:p>
                            </ns2:doc>
                            <ns2:doc>Returns a JSON representation of a list of filters</ns2:doc>
                        </ns2:representation>
                    </ns2:response>
                </ns2:method>
            </ns2:resource>
        </ns2:resource>
    </ns2:resources>
</ns2:application>
